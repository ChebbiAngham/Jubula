<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Copyright (c) 2014 BREDEX GmbH.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
 -->
<!--
	CAUTION: don't format any entries, especially don't use line breaks!
	The value of the formated item may contain formating characters like
	tabs or newlines, making them unusable for class or data lookup!
	-->
<compSystem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../jubula/org.eclipse.jubula.toolkit.common/resources/xml/ToolkitComponentConfiguration.xsd">
	<configVersion>
		<majorVersion>1</majorVersion>
		<minorVersion>0</minorVersion>
	</configVersion>
  
  <!-- Button -->
  <concreteComponent type="abstract.ios.Button">
    <realizes>guidancer.concrete.Button</realizes>
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
  </concreteComponent>
  <toolkitComponent type="ios.UIButton" visible="false">
    <realizes>abstract.ios.Button</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UIButtonTester</testerClass>
    <componentClass name="ios.UIButton" />
  </toolkitComponent>
  <toolkitComponent type="ios.UISwitch" visible="false">
    <realizes>abstract.ios.Button</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UIButtonTester</testerClass>
    <componentClass name="ios.UISwitch" />
  </toolkitComponent>
  
    <!-- Textfield -->
  <concreteComponent type="abstract.ios.TextComponent">
    <realizes>guidancer.concrete.TextComponent</realizes>
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
  </concreteComponent>
  <toolkitComponent type="ios.UITextField" visible="false">
    <realizes>abstract.ios.TextComponent</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextComponentTester</testerClass>
    <componentClass name="ios.UITextField" />
  </toolkitComponent>
  <toolkitComponent type="ios.UITextView" visible="false">
    <realizes>abstract.ios.TextComponent</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextComponentTester</testerClass>
    <componentClass name="ios.UITextView" />
  </toolkitComponent>
  
  <!-- Label -->
  <concreteComponent type="abstract.ios.TextVerifiable">
    <realizes>guidancer.concrete.Label</realizes>
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
  </concreteComponent>
  
  <toolkitComponent type="ios.UILabel" visible="false">
    <realizes>abstract.ios.TextVerifiable</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextVerifiableTester</testerClass>
    <componentClass name="ios.UILabel" />
  </toolkitComponent>
  
  <toolkitComponent type="ios.UITableViewCell" visible="false">
    <realizes>abstract.ios.TextVerifiable</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextVerifiableTester</testerClass>
    <componentClass name="ios.UITableViewCell" />
  </toolkitComponent>
  
  <toolkitComponent type="ios.UINavigationItemView" visible="false">
    <realizes>abstract.ios.TextVerifiable</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextVerifiableTester</testerClass>
    <componentClass name="ios.UINavigationItemView" />
  </toolkitComponent>
  
  <toolkitComponent type="ios.UITabBarButton" visible="false">
    <realizes>abstract.ios.TextVerifiable</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextVerifiableTester</testerClass>
    <componentClass name="ios.UITabBarButton" />
  </toolkitComponent>
  
  <toolkitComponent type="ios.UIImageView" visible="false">
    <realizes>abstract.ios.TextVerifiable</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITextVerifiableTester</testerClass>
    <componentClass name="ios.UIImageView" />
  </toolkitComponent>
  
  <!-- List -->
  <concreteComponent type="abstract.ios.List">
    <realizes>guidancer.concrete.List</realizes>
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
  </concreteComponent>
  <toolkitComponent type="ios.UITableView" visible="false">
    <realizes>abstract.ios.List</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UIListTester</testerClass>
    <componentClass name="ios.UITableView" />
  </toolkitComponent>
  
  <!-- Tabbed Control -->
  <concreteComponent type="abstract.ios.TabComponent">
    <realizes>guidancer.concrete.TabbedPane</realizes>
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
  </concreteComponent>
  <toolkitComponent type="ios.UISegmentedControl" visible="false">
    <realizes>abstract.ios.TabComponent</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITabComponentTester</testerClass>
    <componentClass name="ios.UISegmentedControl" />
  </toolkitComponent>
  
  <toolkitComponent type="ios.UITabBar" visible="true">
    <realizes>abstract.ios.TabComponent</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITabComponentTester</testerClass>
    <componentClass name="ios.UITabBar" />
    <action name="CompSystem.CheckBadgeValue">
      <method>rcCheckBadgeValue</method>
      <param name="CompSystem.Text"
             descriptionKey="CompSystem.Text.descr" >
      	<type>java.lang.String</type>
      </param>
      <param name="CompSystem.TabIndex"
             descriptionKey="CompSystem.TabIndex.descr" >
      	<type>java.lang.Integer</type>
      </param>    
      <param name="CompSystem.Operator"
             descriptionKey="CompSystem.Operator.descr" >
        <type>java.lang.String</type>
        <defaultValue>equals</defaultValue>
        <valueSet>
          <element name="CompSystem.Equals" value="equals"/>
          <element name="CompSystem.NotEquals" value="not equals"/>
          <element name="CompSystem.MatchesRegExp" value="matches"/>
          <element name="CompSystem.SimpleMatch" value="simple match"/>
        </valueSet>
      </param>
    </action>
  </toolkitComponent>
  
  <!-- Combo Box Controls -->
  <concreteComponent type="abstract.ios.Picker" visible="true">
    <realizes>guidancer.concrete.ComboBox</realizes>
    
    <action name="CompSystem.Swipe">
      <method>rcSwipe</method>
      <param name="CompSystem.Direction"
             descriptionKey="CompSystem.Direction.descr" >
		<type>java.lang.String</type>
		<defaultValue>right</defaultValue>
		<valueSet>
			<element name="CompSystem.Up" value="up"/>
			<element name="CompSystem.Down" value="down"/>
			<element name="CompSystem.Right" value="right"/>
			<element name="CompSystem.Left" value="left"/>
		</valueSet>
	  </param>
    </action>
    
    <action name="CompSystem.VerifyContainsValueInColumn">
      <method>rcVerifyContainsValue</method>
      <param name="CompSystem.Text"
             descriptionKey="CompSystem.Text.descr" >
        <type>java.lang.String</type>
      </param>
      <param name="CompSystem.Operator"
             descriptionKey="CompSystem.Operator.descr" >
        <type>java.lang.String</type>
        <defaultValue>equals</defaultValue>
        <valueSet>
          <element name="CompSystem.Equals" value="equals"/>
          <element name="CompSystem.NotEquals" value="not equals"/>
          <element name="CompSystem.MatchesRegExp" value="matches"/>
          <element name="CompSystem.SimpleMatch" value="simple match"/>
        </valueSet>
      </param>
      <param name="CompSystem.Exists"
             descriptionKey="CompSystem.Exists.descr" >
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
          <valueSet>
              <element name="CompSystem.True" value="true"/>
              <element name="CompSystem.False" value="false"/>
          </valueSet>
      </param>
      <param name="CompSystem.Column"
             descriptionKey="CompSystem.Column.descr" >
        <type>java.lang.Integer</type>
		<defaultValue>1</defaultValue>
      </param>
    </action>
    
    <action name="CompSystem.VerifySelectedIndexInColumn">
      <method>rcVerifySelectedIndex</method>
      <param name="CompSystem.OneIndex"
             descriptionKey="CompSystem.OneIndex.descr" >
        <type>java.lang.String</type>
      </param>
      <param name="CompSystem.IsSelected"
             descriptionKey="CompSystem.IsSelected.descr" >
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
          <valueSet>
              <element name="CompSystem.True" value="true"/>
              <element name="CompSystem.False" value="false"/>
          </valueSet>
      </param>
      <param name="CompSystem.Column"
             descriptionKey="CompSystem.Column.descr" >
        <type>java.lang.Integer</type>
        <defaultValue>1</defaultValue>
      </param>
    </action>
    <action name="CompSystem.SelectIndexInColumn">
      <method>rcSelectIndex</method>
      <param name="CompSystem.OneIndex"
             descriptionKey="CompSystem.OneIndex.descr" >
        <type>java.lang.String</type>
      </param>
      <param name="CompSystem.Column"
             descriptionKey="CompSystem.Column.descr" >
        <type>java.lang.Integer</type>
      <defaultValue>1</defaultValue>
      </param>
    </action>
    <action name="CompSystem.SelectValueInColumn">
      <method>rcSelectValue</method>
      <param name="CompSystem.Text"
             descriptionKey="CompSystem.Text.descr" >
        <type>java.lang.String</type>
      </param>
      <param name="CompSystem.Operator"
             descriptionKey="CompSystem.Operator.descr" >
        <type>java.lang.String</type>
        <defaultValue>equals</defaultValue>
        <valueSet>
          <element name="CompSystem.Equals" value="equals"/>
          <element name="CompSystem.NotEquals" value="not equals"/>
          <element name="CompSystem.MatchesRegExp" value="matches"/>
          <element name="CompSystem.SimpleMatch" value="simple match"/>
        </valueSet>
      </param>
      <param name="CompSystem.SearchType"
             descriptionKey="CompSystem.SearchType.descr" >
        <type>java.lang.String</type>
        <defaultValue>absolute</defaultValue>
        <valueSet>
          <element name="CompSystem.Absolute" value="absolute"/>
          <element name="CompSystem.Relative" value="relative"/>
        </valueSet>
      </param>
      <param name="CompSystem.Column"
             descriptionKey="CompSystem.Column.descr" >
        <type>java.lang.Integer</type>
        <defaultValue>1</defaultValue>
      </param>
    </action>
  </concreteComponent>
  
  <toolkitComponent type="ios.UIPickerView" visible="false">
    <realizes>abstract.ios.Picker</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UIPickerViewTester</testerClass>
    <componentClass name="ios.UIPickerView" />
  </toolkitComponent>

  <toolkitComponent type="ios.UIApplication" visible="true" hasDefaultMapping="true">
    <realizes>guidancer.concrete.GraphicApplication</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UIApplicationTester</testerClass>
    <componentClass name="ios.UIApplication" />
    <action name="CompSystem.TapViewWithAccessibilityLabel">
      <method>rcTapViewWithAccessibilityLabel</method>
      <param name="CompSystem.Label"
             descriptionKey="CompSystem.Label.descr" >
        <type>java.lang.String</type>
      </param>    
    </action>
  </toolkitComponent>

  <toolkitComponent type="ios.UITooltip" visible="false" hasDefaultMapping="true" supported="false">
    <realizes>guidancer.concrete.Tooltip</realizes>
    <testerClass>com.bredexsw.jubula.rc.mobile.ios.impl.UITooltipTester</testerClass>
    <componentClass name="ios.UITooltip" />
  </toolkitComponent>

</compSystem>