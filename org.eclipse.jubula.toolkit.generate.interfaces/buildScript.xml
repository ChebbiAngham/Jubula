<?xml version="1.0" encoding="UTF-8"?><!--
    Copyright (c) 2004, 2010 BREDEX GmbH.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
 -->

<!-- ====================================================================== 
     Dec 2, 2009 2:17:55 PM                                                        

     Generate Interfaces    
     Generating interfaces for the toolkit-specific Impl-Classes
                   
     berndk                                                                
     ====================================================================== -->
<project name="org.eclipse.jubula.toolkit.generate.interfaces" default="generate">

	<property name="build.classes" value="build/classes" />
	<property name="build.jar" value="app" />
	<property name="build.resources" value="app/resources" />
	<property name="build.lib" location="app/lib" />
	<property name="java.dir" value="src" />
	<property name="utils.dir" value="resources" />
	<property name="apache.lib" value="lib" />
	<property name="GDTools" value="../org.eclipse.jubula.tools" />

	<!-- 
	load properties from build.properties file. We expect at least the 
	following properties to be defined there:
	 * javacSource
	 * javacTarget 
	-->
	<property file="build.properties"/>
	
	<path id="classpathInterfaces">
		<fileset dir="${GDTools}/build/jars">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${GDTools}/lib">
			<include name="commons-lang-2.4.jar" />
		</fileset>
		<fileset dir="${apache.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="build" depends="clean" description="building application for generating interfaces">
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.jar}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.resources}" />

		<copy todir="${build.resources}">
			<fileset dir="${utils.dir}">
				<include name="*.properties" />
			</fileset>
		</copy>
		
		<ant dir="${GDTools}" antfile="buildScript.xml" target="jar" inheritAll="false" />
		
		<copy todir="${build.lib}">
			<fileset dir="${apache.lib}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="../org.eclipse.jubula.tools/build/jars">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="../org.eclipse.jubula.tools/lib">
				<include name="commons-lang-2.4.jar" />
				<include name="commons-collections-3.2.1.jar" />
				<include name="jcl-over-slf4j-1.5.2.jar" />
				<include name="slf4j-log4j12-1.5.2.jar" />
				<include name="slf4j-api-1.5.2.jar" />
				<include name="log4j-1.2.14.jar" />
				<include name="xstream-1.1.2.jar" />
				<include name="xpp3_min-1.1.3.4.I.jar" />
			</fileset>
			<fileset dir="../org.eclipse.jubula.rc.common/lib">
				<include name="org.apache.commons.collections_3.2.0.v201005080500.jar" />
			</fileset>
		</copy>

		<javac srcdir="${java.dir}" 
			destdir="${build.classes}" 
			fork="true" 
			executable="javac" 
			source="${javacSource}" 
			target="${javacTarget}">
			<classpath refid="classpathInterfaces" />
		</javac>

		<jar jarfile="${build.jar}/org.eclipse.jubula.toolkit.generate.interfaces.jar">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jubula.toolkit.generate.interfaces.GenerateInterfaces" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Class-Path" value="./resources/ lib/commons-configuration-1.1.jar lib/xstream-1.1.2.jar lib/commons-io-1.0.jar lib/commons-lang-2.4.jar lib/org.eclipse.jubula.tools.jar lib/org.apache.commons.collections_3.2.0.v201005080500.jar lib/jcl-over-slf4j-1.5.2.jar lib/slf4j-log4j12-1.5.2.jar lib/slf4j-api-1.5.2.jar lib/log4j-1.2.14.jar lib/xpp3_min-1.1.3.4.I.jar" />

			</manifest>
			<fileset dir="${build.classes}" />
		</jar>
	</target>

	<target name="generate" description="generate the interface definitions" depends="build">
		<java jar="${build.jar}/org.eclipse.jubula.toolkit.generate.interfaces.jar" dir="${build.jar}" fork="true" failonerror="true">
			<arg value="-all" />
		</java>
	</target>

	<target name="clean">
		<delete dir="${build.classes}" />
		<delete file="${build.jar}/*.jar" />
		<delete dir="${build.jar}" />
		<delete dir="${build.lib}" />
	</target>
</project>
