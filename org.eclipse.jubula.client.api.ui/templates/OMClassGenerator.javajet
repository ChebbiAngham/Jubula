<%@ jet 
package="org.eclipse.jubula.toolkit.client.api.ui.internal" 
imports="java.util.*
            java.util.Map.Entry
            org.apache.commons.lang.StringUtils
            org.eclipse.jubula.client.api.ui.utils.OMExport
            org.eclipse.jubula.tools.internal.constants.StringConstants" 
class="OMClassGenerator"%>
<%
OMExport exportedOM = (OMExport) argument;
String className = StringUtils.substringBefore(
                                exportedOM.getTargetClassName(), StringConstants.DOT);
%>

import org.eclipse.jubula.client.MakeR;
import org.eclipse.jubula.tools.ComponentIdentifier;

/** 
 * Exported Object Mapping 
 * @Generated
 */
public class <%=className%> {
<%
Map<String, String> validJavaIdentifierMapping = exportedOM.createIdentifierMap();
Map<String, String> om = exportedOM.getObjectMapping();
for (Entry<String, String> entry : validJavaIdentifierMapping.entrySet()) {%>
    <%String logicalComponentName = entry.getKey();
    String encodedComponentIdentifier = om.get(logicalComponentName);
    String javaQualifier = validJavaIdentifierMapping.get(logicalComponentName);%>
    /** The component identifier for "<%=logicalComponentName%>"*/
    public static final ComponentIdentifier <%=javaQualifier%> = MakeR.createCI("<%=encodedComponentIdentifier%>"); //$NON-NLS-1$
<%}%>
    
    /** Constructor */
    private <%=className%>() {
        // private
    }
}
