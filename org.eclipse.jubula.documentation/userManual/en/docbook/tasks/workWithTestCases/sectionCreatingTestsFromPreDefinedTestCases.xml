<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Copyright (c) 2014 BREDEX GmbH.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
-->

<section xml:id="creating-tests-from-the-library-of-pre-defined-test-cases" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                                                      xmlns:xi="http://www.w3.org/2001/XInclude"
                                                                                      xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Creating tests from the library of pre-defined Test Cases</title>
  <anchor role="helpid" condition="guidancerSpecTestCaseEditorContextId" xml:id="creating-tests-from-the-library-of-pre-defined-test-cases.guidancerSpecTestCaseEditorContextId">Test Case Editor</anchor>
  <anchor role="helpid" condition="testCaseAddExistingContextId" xml:id="creating-tests-from-the-library-of-pre-defined-test-cases.testCaseAddExistingContextId">Existing Test Case Dialog</anchor>
  <anchor role="helpid" condition="testSpecificationViewContextId" xml:id="creating-tests-from-the-library-of-pre-defined-test-cases.testSpecificationViewContextId">Test Case Browser</anchor>
  <para>
    Everything you need to create tests is already available for you
    in each Project. The library of Test Cases which appears
    automatically in each new Project contains all the actions
    supported for testing as well as some examples of more complex
    keywords. For general information about the library, read the
    section later on (<xref linkend="library-information"/>). To learn how to
    use the library to create tests, read the next 
    <xref linkend="using-the-library"/>.
  </para>
  <section xml:id="using-the-library">
    <title>Using the library to create tests</title>
    <para>
      Creating tests with the ITE is really just a matter of:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Deciding how to structure your tests (i.e. what keywords
          to create and how to combine them).
        </para>
      </listitem>
      <listitem>
        <para>
          Choosing the Test Cases from the library (or from your own
          set of Test Cases) that you need to create these keywords.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      To use the Test Cases from the library, you will first need to
      create a Test Case of your own (<xref linkend="creating-test-cases"/>).
    </para>
    <orderedlist>
      <listitem>
        <para>
          Open the Test Case Editor by double-clicking on the
          Test Case you want to edit in the Test Case Browser.
        </para>
      </listitem>
      <listitem>
        <para>
          In the Test Case Browser, browse to a Test Case that
          you want to add. For help on finding your way around the
          library, see the later
          <xref linkend="tips-and-tricks-library"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          You can add the Test Case by dragging and dropping from the Test Case Browser to the Test Case Editor or you can right click on the Test Case in the Test Case Editor and select:
        </para>
          
        <para>
          <emphasis role="menuPath">Reference Existing Test Case</emphasis>
        </para>
        
        <para>
          to see a list of all Test Cases that you can add to this Test Case.
        </para>
        <para role="tip">
          You can filter in this dialog using the field at the top. Use star <emphasis role="input">*</emphasis> as a wild card.
        </para>
        <para role="tip">
          You can open the dialog to reference an existing Test Case by pressing <emphasis role="input">»ENTER«</emphasis> on a Test Case in the Test Case Editor.
        </para>
      </listitem>
      <listitem>
        <para>
          Once you have added the Test Case, you will need to enter
          a component name in the Component Names View
          (<xref linkend="entering-and-reassigning-component-names-in-the-component-names-view"/>) and you will need to enter
          data for the Test Case in the Properties View
          (<xref linkend="working-with-data"/>).
        </para>
      </listitem>
    </orderedlist>
  </section>
  <section xml:id="library-information">
    <title>Information about the library</title>
    <orderedlist>
      <listitem>
        <para>
          You can use a highly reusable library of Test Cases to
          specify tests.
        </para>
      </listitem>
      <listitem>
        <para>
          The Projects containing the Test Case libraries are located under:
        </para>
        
        <para>
          <emphasis>examples/testcaseLibrary</emphasis>.
        </para>
      </listitem>
      <listitem>
        <para>
          The Projects available are:
        </para>
        <itemizedlist>
          <listitem>
            <para>
              unbound_modules_concrete
            </para>
          </listitem>
          <listitem>
            <para>
              unbound_modules_web
            </para>
          </listitem>
          <listitem>
            <para>
              unbound_modules_swt
            </para>
          </listitem>
          <listitem>
            <para>
              unbound_modules_rcp
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          These Projects contain reusable Test Cases which have
          been created in advance so you do not have to specify them
          yourself.
        </para>
        <para role="tip">
          Refer to the chapter on Components, Actions, and Parameters for information on components, the
          actions they support, and their parameters.
        </para>
      </listitem>
      <listitem>
        <para>
          The library is split into categories of <emphasis>actions</emphasis>
          on components. To select something in your AUT, open
          the <emphasis>select</emphasis> category and then open the category
          for the type of component you want to select something
          from.
        </para>
        <para role="tip">
          The names for these Test Cases all begin with ”<emphasis>ub</emphasis>”. This means that they are <emphasis>unbound</emphasis> -- they are not in any way dependent on an AUT.
        </para>
      </listitem>
      <listitem>
        <para>
          Each Test Case in the library contains one Test Step which
          corresponds to the action in the Test Case name. The
          component name is a placeholder, and the parameters have
          been referenced so that you can enter your own data.
        </para>
        <para role="tip">
          The unbound modules Projects which correspond to your chosen Project toolkit are automatically imported into the database and reused in your Project.
        </para>
        <para role="warning">
          We do not recommend making changes to the installed unbound module Projects, for compatibility reasons. If you have Test Cases you want to reuse in other Projects, we advise creating your own library Project.
        </para>
      </listitem>
    </orderedlist>
  </section>
  <section xml:id="tips-and-tricks-library">
    <title>Tips and tricks for using the Test Case library</title>
    <para>
      The Test Cases in the library are organised into actions. In
      the <emphasis>basic</emphasis> category, you will find the various actions
      offered for testing. The <emphasis>complex</emphasis> category contains
      some example keywords which are built up of more than one
      Test Case.
    </para>
    <para>
      When specifying your tests, you need to find and choose which
      actions you will need. This takes some practice, but there are
      some hints which can help you:
    </para>
    <para>
      <emphasis role="strong">High-Level Actions</emphasis><?linebreak?>
      During a test, <emphasis>high-level</emphasis> actions are executed. This means that if you want to select something from a menu using the menupath, for example, you need to look in the category:
    </para>
    
    <para>
      <emphasis>Actions (basic)/Select/Menu Bar</emphasis>
    </para>
    
    <para>
      and select the Test Case:
    </para>
    
    <para>
      <emphasis>ub_mbr_selectEntry_byTextpath</emphasis>
    </para>
    
    <para>
      The Test Case finds the menu, opens it, and clicks the item you specify.
    </para>
    <para>
      <emphasis role="strong">Abstract components</emphasis><?linebreak?>
      There are some actions which are executable on many different components. Clicks, for example can be executed on pratically all components in the interface. You can also check text on labels, combo boxes and text fields. Obviously, it makes sense to specify your Test Cases as abstractly as possible so that they can be reused in more places. This helps keep the maintenance low later.
    </para>
    <para>
      You will notice in the library that there is no
      <emphasis>Button</emphasis> category under the <emphasis>Click</emphasis> category.
      Instead, you will find various click actions specified for
      <emphasis>Graphics Component (grc)</emphasis>. This is because all
      components which support clicks belong to the
      <emphasis>Graphics Component</emphasis> group.
    </para>
    <para>
      In the same way, you will find the category <emphasis>Check/Component with Text</emphasis>. You can use the check actions from this category to check text on any component with text – buttons, text fields, combo boxes, labels.
    </para>
    <para>
      <emphasis role="strong">Parameters</emphasis><?linebreak?>
      Different actions require different data. Some Test Cases in the library have been pre-configured with data to make test specification easier (look in the category <emphasis>Input via Keyboard/Application/Key Combination</emphasis> for a long list).
    </para>
    <para>
      Some actions let you choose whether you want to enter data
      using an <emphasis>indexpath</emphasis> or a <emphasis>textpath</emphasis>. We
      recommend using the textpath so that you are not dependent on
      the order of e.g. menu entries or tabbed panes.
    </para>
    <para>
      To make text-based parameters more robust, you can often
      choose an <emphasis>operator</emphasis>. You can choose between
      <emphasis>equals, matches, simple match, not equals</emphasis>. Using
      matches lets you use regular expressions so that you don’t
      have to hard-code the whole text parameter.
    </para>
  </section>
</section>