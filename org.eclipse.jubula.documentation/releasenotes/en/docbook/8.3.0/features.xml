<!-- 
  Copyright (c) 2016 BREDEX GmbH.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
  
  Contributors:
      BREDEX GmbH - initial API and implementation and/or initial documentation
-->
<section xml:id="new-features-and-developments-8.3.0" version="5.0"
    xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xl="http://www.w3.org/1999/xlink">
    <title>New Features and Developments</title>
<para><emphasis role="strong">Since M2</emphasis></para>
<para>
 <emphasis role="strong">Selenium version updated</emphasis>
</para>
<itemizedlist>
  <listitem>
    <para>
      The version of Selenium used by Jubula to execute HTML tests has been updated to version 2.53.0.
    </para>
  </listitem>
</itemizedlist>
<para>
 <emphasis role="strong">Added support for Slider components to all Java toolkits</emphasis>
</para>
<itemizedlist>
  <listitem>
    <para>
      It is now possible to create tests for Sliders in JavaFX, Swing and RCP/SWT.
    </para>
  </listitem>
</itemizedlist>
<para>
 <emphasis role="strong">Added move action for Tree Tables in JavaFX</emphasis>
</para>
<itemizedlist>
  <listitem>
    <para>
      It is now possible to move in a Tree Table similar to moving in Tables.
    </para>
  </listitem>
</itemizedlist>
<para>
    <emphasis role="strong">Added move action for Tree Tables in JavaFX</emphasis>
   </para>
   <itemizedlist>
     <listitem>
       <para>
         It is now possible to move in a Tree Table similar to moving in Tables.
       </para>
     </listitem>
   </itemizedlist>
 <para>
     <emphasis role="strong">New Action - check existence of column for Tables and Tree Tables</emphasis>
 </para>
 <itemizedlist>
 <listitem>
  <para>
    A new action was added. It is now possible to check if a specific
    column exists, respectively does not exist, in a Table/Tree Table.
  </para>
 </listitem>
 </itemizedlist>
<para><emphasis role="strong">Since M1</emphasis></para>
 <para>
  <emphasis role="strong">New way to export and import projects</emphasis>
 </para>
 <itemizedlist>
 <listitem>
  <para>
   We changed our xml-based project export mechanism to a custom way
   which uses the json format.
  </para>
 </listitem>
 <listitem>
  <para>
   The new files consume much less disc space and the export and
   import process runs faster now.
  </para>
 </listitem>
<listitem>
    <para>
        Due to that we're about to discontinue the support for the old XML
        interchange format. Which is why exporting projects is now
        only possible with the new *.jub interchange format.
    </para>
    <para>
        We will however support the importing of the old XML
        format for a couple of versions.
    </para>
</listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">You can use Selenium Webdriver for HTML tests</emphasis>
 </para>
 <itemizedlist>
  <listitem>
   <para>
    We added the possibility to use Selenium Webdriver for test execution
    in the HTML toolkit in an experimental mode.
   </para>
  </listitem>
  <listitem>
  <para>
   You can try it out for <emphasis>Firefox</emphasis> and <emphasis>Chrome</emphasis>.
   If you choose <emphasis>Chrome</emphasis> you will have to 
   <link xl:href="https://sites.google.com/a/chromium.org/chromedriver/downloads">
   download</link> the driver explicitly. Testing with the 
   <emphasis>Internet Explorer</emphasis> does not yet work
   at this point in time.
  </para>
 </listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">Removal of Dashboard</emphasis>
 </para>
 <itemizedlist>
  <listitem>
   <para>
    In the course of some cleanup efforts the dashboard was removed
    from Jubula.
   </para>
  </listitem>
  <listitem>
   <para>
    If you connected your tests to an ALM system, the link to the
    results opens them in a Jubula instance now, instead of the
    dashboard.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">New features in Jacoco monitoring agent
  </emphasis>
 </para>
 <itemizedlist>
  <listitem>
   <para>
    Now you are able to add multiple source directories in Jacoco
    code coverage. The added source directories can be edited and
    removed.
   </para>
  </listitem>
 </itemizedlist>
 <itemizedlist>
  <listitem>
   <para>
    Optional configuration to allow class file id collision in code
    coverage.
   </para>
  </listitem>
 </itemizedlist>
 <itemizedlist>
  <listitem>
   <para>
    You can enter multiple regexes to for inclusion. For more
    information see user manual.
   </para>
  </listitem>
 </itemizedlist>
 <itemizedlist>
  <listitem>
   <para>
    Optional configuration to allow class file id collision in code
    coverage.
   </para>
  </listitem>
 </itemizedlist>
 <itemizedlist>
  <listitem>
   <para>
    You can add multiple directories and jar files in installation
    path.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">New features in report generation</emphasis>
 </para>
 <itemizedlist>
  <listitem>
   <para>
   	It is now possible to automatically generate a monitoring report.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">Timeout to connect to AUT now configurable
  </emphasis>
 </para>
 <itemizedlist>
  <listitem>
   <para>
    You can now configure the timeout for connecting to an AUT as a
    property for the AUT, so that performance problems in your
    environment won't prevent connecting to your AUT.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  <emphasis role="strong">Empty parameters allowed</emphasis>
 </para>
 <itemizedlist>
 <listitem>
  <para>
   Now you can leave parameter fields in test steps empty. This might be 
   helpful, if you use for example the <emphasis>invoke method</emphasis>
   action and don't need a certain parameter.
  </para>
 </listitem>
 </itemizedlist>
 <para>
	<emphasis role="strong">New way to check component appearance and disappearance.</emphasis>
 </para>
 <itemizedlist>
 <listitem>
 <para>
 	We approved the check component existence with a timeout property.
	With this value you can set a time limit, while the test execution will
	wait for the component appearing or disappearing. For more information
	check the Reference Manual.
 </para>
</listitem>
</itemizedlist>
<para>
    <emphasis role="strong">Check the text/properties of customized cells in JavaFX</emphasis>
 </para>
 <itemizedlist>
 <listitem>
	<para>
	It is now possible to check the text of customized cells in JavaFX. In
	this case customized means that there are child components within the
	cell that are used to display the text of the cell. In this case the
	old mechanism to get the text of a cell would not be able to retrieve
	the displayed text. With the new approach we are checking for every
	child component of the cell if there exists an adapter which can
	retrieve the text.
	
	This also applies for check property at mouse position. First of all it is
	checked if the cell contains the wanted property, if this is not the
	case we are checking all child components which are under the mouse.
	
	Because both mechanisms try to find a fitting adapter for the child components,
	you can easily add support for a custom component that you created. 
	You just have to create an extension containing the adapter for your component. 
 </para>
</listitem>
</itemizedlist>
<para>
	<emphasis role="strong">Two new actions to execute external commands</emphasis>
 </para>
 <itemizedlist>
 <listitem>
 	<para>
 		We introduced a new CAP for executing external commands:
 		<itemizedlist>
 			<listitem>
 				<para>
 					Execute External Command
 				</para>
 			</listitem>
 		</itemizedlist>
 	</para>
</listitem>
<listitem>
	<para>
		Among other things it is now possible to specify a parameter split character, the encoding type and 
		to specify the directory and the executable file separately.
	</para>	
</listitem>
</itemizedlist>
</section>
