<section xml:id="new-features-and-developments-8.1" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                              xmlns:xi="http://www.w3.org/2001/XInclude"
                                                              xmlns:xl="http://www.w3.org/1999/xlink">
  <title>New Features and Developments</title>
    <para>
    <emphasis role="strong">API for Java-based UI test automation</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        We've created a whole new layer in the ITE that allows you to write functional UI tests
        via an official Java client API. Detailed information of the architecture and how to start
        can be found in the Developer Manual.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">New option for reporting to ALM systems:
    update fields</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now specify in the Project properties that you want to
        update fields on tasks in ALM repositories after a test has
        run.
      </para>
    </listitem>
    <listitem>
      <para>
        This allows you to automatically change e.g. the status of
        tasks based on test results.
      </para>
    </listitem>
    <listitem>
      <para>
        There is a property inspector to let you see what properties a specific task has.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">-datadir and -resultdir parameters are now
    optional for testexec</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        The parameters to enter a result directory (where HTML and XML
        reports are created) and to enter the place where any external
        data files reside are now optional in the testexec.
      </para>
    </listitem>
    <listitem>
      <para>
        This reduces the amount of parameters you have to enter for a
        simple configuration.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">New optional parameter for testexec
    -resultname</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now specify a name for the HTML and XML files that
        testexec can produce using the parameter -resultname.
      </para>
    </listitem>
    <listitem>
      <para>
        If you do not use this parameter, then a default name
        consisting of the Test Suite name will be used.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Improved no-run option in
    testexec</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        The no-run option in the testexec now has a number of
        parameters so that you can define how far the test should be
        checked.
      </para>
    </listitem>
    <listitem>
      <para>
        You can use this option to perform all steps up to the actual
        test execution to ensure that e.g. AUTs can be started, object
        mapping is complete etc.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Composite components in JavaFX can now be
    mapped</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        It is now easier / possible to map composite components such
        as accordeons and choice boxes in JavaFX AUTs.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Transformed components in JavaFX can now be tested</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now test components in JavaFX that have been transformed, e.g. via scaling, 
        clipping, translation, rotation and shearing.
      </para>
    </listitem>
  </itemizedlist>
  <para>
  <emphasis role="strong">Support for menu buttons in JavaFX
  </emphasis>
  </para>
  <itemizedlist>
  	<listitem>
  	<para>
  	You can now map menu buttons in JavaFX AUTs as Graphics Components. 
  	You can select from the menu on such buttons using the actions to select 
  	from context menus, using the mouse button "1" (left button).
  	</para>
  	</listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Support for derived components in
    JavaFX</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now test components in JavaFX AUTs that are derived
        from currently supported JavaFX components.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Support for nested columns in tables in
    JavaFX</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now test tables in JavaFX that have nested columns
        (i.e. where one column contains multiple child columns).
      </para>
    </listitem>
    <listitem>
      <para>
        Enter the path to the column you require using a forward slash
        as a path separator, e.g. <emphasis role="input">Address/Street</emphasis>.
      </para>
    </listitem>
    <listitem>
      <para>
        You can address the columns using indexpath and textpath.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Description View in the ITE</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now enter descriptions for nodes (Test Cases, Test Suites, Test Jobs) in your tests. The
        descriptions are entered using a markup language, that you can select in the Project Properties.
      </para>
    </listitem>
    <listitem>
      <para>
        Once you have entered descriptions, you can see them via the Description View when you select 
        a node with a description.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Default columns changed in the Test Result
    Summary View</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        The columns that are shown by default in a new workspace for
        the Test Result Summary View have been reduced.
      </para>
    </listitem>
    <listitem>
      <para>
        You can still add other columns to the view using the context
        menu in the view.
      </para>
    </listitem>
    <listitem>
      <para>
        There is also a new button in the top right hand corner of the
        view to reset the standard column width.
      </para>
    </listitem>
    <listitem>
      <para>
        There is a new column for the version number of the Project.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">New actions in the iOS toolkit</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        The action <emphasis>input text</emphasis> is now available
        for iOS. You can use this action to enter text to a component
        that currently has focus.
      </para>
    </listitem>
    <listitem>
      <para>
        The action <emphasis>click in component</emphasis> is now
        available for iOS.
      </para>
    </listitem>
    <listitem>
      <para>
        The action <emphasis>take screenshot</emphasis> is now
        available for iOS. It takes a screenshot of the App screen.
      </para>
    </listitem>
    <listitem>
      <para>
        There is a new action just for iOS <emphasis>check badge
        value</emphasis>. Use this action to check the text on a badge
        based on the index of that badge within a tab bar.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Dashboard as a deployable web
    application</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now use the testresults.war found in the
        <emphasis>dashboard/webapp</emphasis> folder to deploy the
        dashboard into your own server.
      </para>
    </listitem>
    <listitem>
      <para>
        The URL for the standalone and deployable dashboard has
        changed to unify it. You must update any links to the
        dashboard to use this new URL.
      </para>
      <programlisting>
		http://HOSTNAME:SERVERPORT/testresults/dashboard
		</programlisting>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">New searching options</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        In the Search Dialog, you can now search for nodes in the
        Project based on their name, their comment and/or their Task
        ID.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Mouse position now shown on screenshots on error</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Automatic screenshots that are taken when an error occurs now show the mouse position.
      </para>
    </listitem>
    <listitem>
    	<para>
    	The mouse position is shown as a square inverted-color area, with the middle pixel being 
    	the position of the mouse pointer.
    	</para>
    </listitem>
  </itemizedlist>
  <para>
  	<emphasis role="strong">Version numbers now allow major, minor, micro numbers and qualifiers</emphasis>
  </para>
  	<itemizedlist>
  		<listitem>
  		<para>
  		You can now create versions of Projects that use major, minor and micro numbers as well as 
  		qualifiers as their version number. 
  		</para>
  		</listitem>
  		<listitem>
  		<para>
  		Version numbers can consist of just a number, just a qualifier, or a number and a qualififier,
  		e.g. <emphasis>1.0_release</emphasis>, <emphasis>1.0</emphasis>, 
  		<emphasis>1.0.0</emphasis>, <emphasis>1.0.0_release</emphasis>, <emphasis>version3</emphasis>
  		</para>
  		</listitem>
 	</itemizedlist>
 	<para>
 		<emphasis role="strong">Support for Eclipse Mars AUTs</emphasis>
 	 </para>
 			<itemizedlist>
 				<listitem>
 				<para>
 				You can now test AUTs that are based on the Eclipse Mars platform. 
 				</para>
 				</listitem>
 			
 			</itemizedlist>
 	<para>
 		<emphasis role="strong">Testexec now includes completeness check for Test Jobs</emphasis>
 	 </para>
 			<itemizedlist>
 				<listitem>
 				<para>
 				The testexec tool now checks whether a Test Job is complete before 
 				attempting to start test execution. If the Test Job contains one 
 				or more incomplete Test Suites, it will not start and an error message 
 				will be shown.
 				</para>
 				</listitem>
 			</itemizedlist>
 	<para>
 		<emphasis role="strong">Testexec will start the first AUT in a Test Job</emphasis>
 	 </para>
 			<itemizedlist>
 				<listitem>
 				<para>
 				When using Test Jobs, testexec will start the first AUT in the Test Job
 				if this AUT is startable via an AUT configuration. You can continue to use 
 				autrun for all of your Test Suites in a Test Job if you prefer. 
 				</para>
 				</listitem>
 			</itemizedlist>
</section>