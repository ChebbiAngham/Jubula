<!-- 
  Copyright (c) 2014 BREDEX GmbH.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
-->

<section id="supported-html-auts" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                xmlns:xi="http://www.w3.org/2001/XInclude"
                                                xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Supported HTML AUTs</title>
  <para>
    AUTs written with the HTML GUI toolkit are supported according
    to the following points:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        The HTML tests are driven by Selenium. We document which
        version of Selenium we are currently using as a driver in
        the release notes. Check the release notes for the current
        Selenium version and check the Selenium documentation for
        supported browsers.
      </para>
    </listitem>
    <listitem>
      <para>
        We strongly recommend writing HTML AUTs so that they are
        conform to the <emphasis>W3C</emphasis> standard. You can
        check whether your AUT is <emphasis>W3C</emphasis> conform
        using an online validator: http://validator.w3.org
      </para>
    </listitem>
    <listitem>
      <para>
        We recommend disabling the protected mode in Internet
        Explorer when testing HTML AUTs. This may be required in
        Windows 8+ when performing key combinations as a part of the
        test, but may also be required for other versions and other
        actions.
      </para>
    </listitem>
    <listitem>
      <para>
        Some of the actions in the <emphasis>concrete</emphasis>
        toolkit (i.e. which are theoretically valid for all AUT
        types) may not (yet) be supported. In some cases, this is
        because the component doesn’t exist as such in HTML AUTs
        (menu bars for example). In other cases, text components
        such as tables or lists do not have a concept for dealing
        with selection as they do in e.g. Swing.
      </para>
    </listitem>
    <listitem>
      <para>
        The <emphasis>autrun</emphasis> option to start AUTs
        (<xref linkend="starting-java-with-the-command"/>) cannot be used for HTML AUTs.
      </para>
    </listitem>
    <listitem>
      <para>
        There is a minor difference in the way that clicks are
        performed in HTML compared to other supported toolkits. In
        other toolkits such as Swing, an API is used to simulate
        actions at the OS level so that the the computer itself
        can’t distinguish whether it came from a tool or a keyboard.
        A normal click by a user in a browser would go via the mouse
        through various layers to the webserver, resulting in a
        request to that webserver. The clicks in the HTML toolkit
        are performed by firing DOM events using Javascript
        therefore bypassing the mouse level. So, although the
        computer can tell the difference, the webserver can’t.
      </para>
    </listitem>
    <listitem>
      <para>
        HTML AUTs can be tested in single-window or multi-window
        mode. If your AUT has functions that cause new windows to
        open, then you should specify this in the AUT configuration.
        You can then map components from different windows, and also
        use specific actions to switch windows during your test.
        Multi-window mode on Internet Explorer is considerably
        slower than on Firefox – this is a known issue registered at
        Selenium. There are known issues with AUT starting in
        multi-window mode on OSX systems for Firefox and on Safari –
        we do not test these combinations.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Closing HTML AUTs via the close
    button</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        If you close a HTML AUT by closing the browser, the ITE will
        correctly notice the closure after 5 seconds (configurable)
        and will remove the AUT from the running AUTs view.
      </para>
    </listitem>
    <listitem>
      <para>
        The mechanism works by polling the AUT, and if it is no
        longer there after the configured time, the AUT is
        considered to be stopped.
      </para>
    </listitem>
    <listitem>
      <para>
        If your AUT may sometimes be unreachable for longer than the default 5 seconds, you can change this time by using a process or system property:
        
        <para>
          <emphasis role="input">TEST_MAX_AUT_RESPONSE_TIME=&lt;timeInMs&gt;</emphasis>.
        </para>
      </para>
    </listitem>
    <listitem>
      <para>
        Further information on this is available in this issue:
        
        <para>
          <link xl:href="http://bugzilla.bredex.de/1391">http://bugzilla.bredex.de/1391</link>.
        </para>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis role="strong">Overwriting launcher options now
    possible</emphasis>
  </para>
  <itemizedlist>
    <listitem>
      <para>
        You can now manually overwrite launcher options for the
        launchers for autrun, testexec, dbtool and dashboard.
      </para>
    </listitem>
  </itemizedlist>
</section>