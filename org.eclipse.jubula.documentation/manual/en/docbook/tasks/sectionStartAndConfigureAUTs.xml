<section id="starting-and-configuring-auts" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                          xmlns:xi="http://www.w3.org/2001/XInclude"
                                                          xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Starting and configuring AUTs</title>
  <section id="configuringaut">
    <title>Configuring AUTs to be started from the ITE</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <para>
      Once you have created a Project (<xref linkend="newproject"/>) and
      defined an AUT (<xref linkend="define-aut"/>), you can add and edit
      AUT configurations.
    </para>
    <para>
      The details in the AUT configuration provide information on
      how to start the AUT, e.g. on which machine.
    </para>
    <para>
      An AUT can have multiple configurations (for example, for
      local and remote testing). A configuration contains all the
      information required to start the AUT, and may contain
      platform- or installation-specific information such as paths to
      working directories, AUT arguments, Java versions, browser
      choices and activation methods.
    </para>
    <para>
      <para role="tip">If you want to start your Java AUT yourself, and have the ITE connect to it, then use the <emphasis>autrun</emphasis> command to start the AUT (<xref linkend="starting-java-with-the-command"/>). In this case, you do not need to create an AUT configuration.</para>
    </para>
    <section id="aut-activation">
      <title>AUT activation</title>
      <para>
        Activation makes sure that the AUT is in focus at the
        beginning of test execution. This is acheived by clicking
        somewhere in the AUT window. You can specify the
        activation method (i.e. where to click) as part of a
        configuration for an AUT, or you can create a Test Step
        within a test to do the same thing.
      </para>
      <para>
        The advantage of specifying an activation method here is that
        it is central and affects each test execution started on this
        AUT with this configuration.
      </para>
      <para>
        Bear in mind that you may need to activate your AUT in
        order for tests to work, especially if the AUT runs on
        the same machine as the ITE.
      </para>
    </section>
  </section>
  <section id="basic-configuration-info">
    <title>Basic information required for every AUT configuration</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <para>
      Regardless of the type of AUT you want to start, you will always
      need to enter the following information in the AUT configuration
      dialog.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          A suggested name for this AUT configuration is generated
          automatically based on your AUT name and the default AUT
          Agent host. You can change this name if you wish.
        </para>
      </listitem>
      <listitem>
        <para>
          The default AUT Agent host is also automatically selected.
          You can select a new AUT Agent from the combo box or add a
          new one by clicking ”<emphasis>New</emphasis>”. For more
          information on adding and editing an AUT Agent, see the
          section later (<xref linkend="aut-agent-preferences"/>).
        </para>
      </listitem>
      <listitem>
        <para>
          Enter the AUT ID that will be given to this AUT when it is
          started.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="using-working-dir-aut-config">
    <title>Using a working directory in an AUT configuration</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <para>
      In some AUT configuration dialogs, you can optionally
      create a working directory to store files in. The server
      directory of the installation is selected as default. To create
      a working directory elsewhere, browse to and select the
      location.
    </para>
    <para>
      The working directory is the root directory for any classpaths,
      classnames, JAR files and binaries. If you create a working
      directory, you can enter the paths to these items using a
      relative path, with the working directory as the root. For more
      information on relative paths, read the section later
      (<xref linkend="using-relative-paths-in-aut-configurations-and-as-test-data"/>).
    </para>
  </section>
  <section id="starting-java-auts">
    <title>Starting Java AUTs (Swing, SWT/RCP/GEF)</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <section id="two-options-to-start-java">
      <title>Two options to start Java AUTs</title>
      <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
      <anchor role="helpid" id="autSettingWizardPagePageContextId">Defining an AUT</anchor>
      <para>
        There are two options to start your Java AUT for testing:
      </para>
      <variablelist>
        <varlistentry>
          <term>
            Via an AUT configuration:
          </term>
          <listitem>
            <para>
              This option means that you create an AUT
              configuration in your Project, and the AUT is
              started from the ITE (<xref linkend="configuring-a-java-aut-ite-start"/>).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Using the <emphasis>autrun</emphasis> command:
          </term>
          <listitem>
            <para>
              This option lets you start an AUT without creating
              a configuration. Certain start parameters are required
              for the AUT so that it can be located
              (<xref linkend="starting-java-with-the-command"/>).
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section id="configuring-a-java-aut-ite-start">
      <title>Configuring a Java AUT to be started from the
      ITE</title>
      <para>
        The AUT configuration dialog for Java has three different
        levels of detail: basic, advanced and expert.
      </para>
      <para>
        See the sections below for information on the different
        levels.
      </para>
    </section>
    <section id="basic-java-configuration">
      <title>Basic Java AUT configuration</title>
      <para>
        You can use the basic setting (<xref linkend="autconfigbasic"/>) to
        configure your AUT if it can be started by an executable
        file (e.g. .bat, .exe, .cmd, .sh etc.) and if it is written in
        Java 1.5 or above, and you are using a Java Standard Edition
        JRE.
        <para role="warning">If you are testing RCP or GEF AUTs, there are certain specific steps you need to take to configure them. See the sections on RCP testing (<xref linkend="rcpaut"/>), GEF testing (<xref linkend="geftest"/>) for details. </para>
      </para>
      <figure id="autconfigbasic">
        <title>AUTconfiguration window: basic</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/autconfigwindow_basic.png"/>
          </imageobject>
          <textobject><phrase>AUTconfiguration window:
          basic</phrase></textobject>
        </mediaobject>
      </figure>
      <orderedlist>
        <listitem>
          <para>
            Enter the basic configuration details as described earlier
            (<xref linkend="basic-configuration-info"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the executable file name in the
            <emphasis>Executable File Name</emphasis> field. This path can be
            relative if you define a working directory
            (<xref linkend="advanced-aut-config"/>).
          </para>
        </listitem>
      </orderedlist>
      <para>
        For information on the advanced properties for the AUT
        configuration, see the next section
        (<xref linkend="advanced-aut-config"/>).
      </para>
    </section>
    <section id="advanced-aut-config">
      <title>Advanced AUT configuration</title>
      <para>
        You can use the advanced dialog (<xref linkend="autconfigadvanced"/>)
        if your AUT is a Java JAR which can be started with a
        double click, or if your application can be started using the
        class name and the classpaths to your AUT. The advanced
        configuration dialog also lets you create a working directory
        for your AUT, and add command-line arguments needed to
        start the AUT. You can select a JRE executable and, for
        SWT/RCP AUTs, a keyboard layout.
      </para>
      <figure id="autconfigadvanced">
        <title>AUTconfiguration window: advanced</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/autconfigwindowadvanced.png"/>
          </imageobject>
          <textobject><phrase>AUTconfiguration window:
          advanced</phrase></textobject>
        </mediaobject>
      </figure>
      <orderedlist>
        <listitem>
          <para>
            Enter the JAR path (directory and file name) into the
            <emphasis>Executable JAR File Name</emphasis> field.
          </para>
          <para>
            This path can be relative (if you define a working
            directory (<xref linkend="using-working-dir-aut-config"/>)), or absolute. This JAR
            file must contain a manifest file which contains the main
            class and the classpath.
          </para>
        </listitem>
        <listitem>
          <para>
            If your AUT must be started with the class name, add
            the main class name and the classpaths into their relative
            fields. The paths can be relative (if you have defined a
            working directory), or absolute.
            <para role="tip">Add all the necessary files and directories to start the AUT. </para>
          </para>
        </listitem>
        <listitem>
          <para>
            Enter any necessary command-line arguments for the
            AUT in the <emphasis>AUT Arguments</emphasis> field.
          </para>
        </listitem>
        <listitem>
          <para>
            Browse to a JRE executable or add a new one by clicking
            ”<emphasis>New</emphasis>”. The Java version used must be 1.5 or
            later.
          </para>
          <para>
            Java is installed with the ITE. You can find the Java file in:
            
            <para>
              <emphasis role="menupath">Guidancer or Jubula</emphasis>--&gt;<emphasis role="menupath">jre</emphasis>--&gt;<emphasis role="menupath">bin</emphasis>. Use java.exe if you want to use a console, use javaw.exe if you do not want a console.
            </para>
          </para>
        </listitem>
        <listitem>
          <para>
            For SWT and RCP AUTs, select which keyboard layout is
            used on the machine on which the AUT will run.
            <para role="tip">The keyboard layout is not the actual keyboard attached to the computer, but is based on the regional language settings for the operating system.</para>
          </para>
          <para>
            English (US) and German (DE) keyboard layouts are
            supported out-of-the box. If you want to use a different
            keyboard layout, see the Extension Manual for information
            on creating keyboard layouts.
          </para>
        </listitem>
      </orderedlist>
      <para>
        For information on the expert properties for the AUT
        configuration, see the next <xref linkend="expert-aut-config"/>.
      </para>
    </section>
    <section id="expert-aut-config">
      <title>Expert AUT configuration</title>
      <para>
        You can use the expert dialog (<xref linkend="autconfigexpert"/>) to
        configure more detailed information about how the AUT
        should be started.
      </para>
      <figure id="autconfigexpert">
        <title>AUTconfiguration window: expert</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/autconfigwindow_expert.png"/>
          </imageobject>
          <textobject><phrase>AUTconfiguration window:
          expert</phrase></textobject>
        </mediaobject>
      </figure>
      <orderedlist>
        <listitem>
          <para>
            Add any additional desired <emphasis>JRE Arguments</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>
            Enter any required <emphasis>System Environment Variables</emphasis>,
            in the format ”<emphasis>&lt;VARNAME&gt;=&lt;value&gt;</emphasis>”,
            i.e. ”<emphasis>PATH=C:\</emphasis>”. Separate each
            variable with a new line by pressing <emphasis role="input">»ENTER«</emphasis>.
          </para>
          <para>
            <para role="warning">Please be advised that ''embedding'' the contents of one
            variable into another is not supported at this time. That is,
            if you have a variable named <emphasis role="input">FOO</emphasis> whose value is
            ”<emphasis>abc</emphasis>”, and set the value of a second
            variable <emphasis role="input">BAR</emphasis> to ”<emphasis>%FOO%def</emphasis>”, the second variable will
            <emphasis>not</emphasis> contain ”<emphasis>abcdef</emphasis>”, but rather the exact text
            ”<emphasis>%FOO%def</emphasis>”, without evaluating it.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            Select an activation method for your AUT. More
            information on AUT activation is available in the
            previous <xref linkend="aut-activation"/>.
          </para>
        </listitem>
        <listitem>
          <para>
            If you want to perform monitoring (code coverage
            (<xref linkend="working-with-code-coverage-with-java-tests"/>) , Chronon recording
            (<xref linkend="using-chronon"/>)), then select this from the combo
            box.
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section id="starting-java-with-the-command">
      <title>Starting Java AUTs with the <emphasis>autrun</emphasis> command</title>
      <anchor role="helpid" id="autSettingWizardPagePageContextId">Defining an AUT</anchor>
      <para>
        The <emphasis>autrun</emphasis> command can be used as an
        alternative to starting your AUT from the ITE. (i.e. with an
        AUT configuration (<xref linkend="configuringaut"/>)). It can only be used
        if your AUT is written in Java 1.5 or above, and you are using
        a Java Standard Edition JRE.
      </para>
      <para>
        <para role="warning">The <emphasis>autrun</emphasis> command cannot be used
        for HTML, iOS or pure SWT AUTs.</para>
      </para>
      <para>
        The command allows you to start your AUT independently, on a
        machine where the AUT Agent is running. The ITE, when
        connected to this AUT Agent will then recognize the running
        AUT as a testable application.
      </para>
      <para>
        To use the <emphasis>autrun</emphasis> command:
      </para>
      <orderedlist>
        <listitem>
          <para>
            Ensure that the AUT Agent is installed on the machine
            where you will be starting the AUT.
          </para>
        </listitem>
        <listitem>
          <para>
            Navigate to the <emphasis>server</emphasis> directory in
            the installation via the command line.
          </para>
        </listitem>
        <listitem>
          <para>
            Start your AUT via the command line by entering
            <emphasis role="input">autrun.exe</emphasis> under Windows or
            <emphasis role="input">autrun</emphasis> under Linux then the following
            parameters:
          </para>
          <table>
            <title>
              Parameters for autrun command
            </title>
            <tgroup cols="2">
              <colspec align="left" colwidth="40%"/>
              <colspec align="left" />
              <thead>
                <row>
                  <entry>
                    <emphasis role="strong">Detail</emphasis>
                  </entry>
                  <entry>
                    <emphasis role="strong">Parameter</emphasis>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    -h
                  </entry>
                  <entry>
                    <emphasis role="input">-h</emphasis><?linebreak?>
                    Gives parameter help
                  </entry>
                </row>
                <row>
                  <entry>
                    -w, <literal>--</literal>workingdir
                  </entry>
                  <entry>
                    <emphasis role="input">-w &lt;directory&gt;</emphasis><?linebreak?>
                    Enter the working directory for the AUT
                  </entry>
                </row>
                <row>
                  <entry>
                    -a, <literal>--</literal>autagenthost
                  </entry>
                  <entry>
                    <emphasis role="input">-a &lt;hostname&gt;</emphasis><?linebreak?>
                    Enter the hostname for the AUT Agent
                  </entry>
                </row>
                <row>
                  <entry>
                    -p, <literal>--</literal>autagentport
                  </entry>
                  <entry>
                    <emphasis role="input">-p &lt;port number&gt;</emphasis><?linebreak?>
                    Enter the port number for the AUT Agent
                  </entry>
                </row>
                <row>
                  <entry>
                    -swing
                  </entry>
                  <entry>
                    If the AUT is a Swing AUT
                  </entry>
                </row>
                <row>
                  <entry>
                    -rcp
                  </entry>
                  <entry>
                    If the AUT is an RCP AUT
                  </entry>
                </row>
                <row>
                  <entry>
                    -swt
                  </entry>
                  <entry>
                    If the AUT is an SWT AUT
                  </entry>
                </row>
                <row>
                  <entry>
                    -k, <literal>--</literal>kblayout
                  </entry>
                  <entry>
                    <emphasis role="input">-k &lt;en_US&gt;</emphasis><?linebreak?>
                    Enter the keyboard layout for SWT/RCP AUTs
                  </entry>
                </row>
                <row>
                  <entry>
                    -i, <literal>--</literal>autid
                  </entry>
                  <entry>
                    <emphasis role="input">-i &lt;ID&gt;</emphasis><?linebreak?>
                    Enter the ID to give to this AUT
                  </entry>
                </row>
                <row>
                  <entry>
                    -e, <literal>--</literal>exec
                  </entry>
                  <entry>
                    <emphasis role="input">-e &lt;AUT.exe&gt;</emphasis><?linebreak?>
                    Enter the executable file for the AUT<?linebreak?>
                    This must be the last parameter in the command line
                  </entry>
                </row>
                <row>
                  <entry>
                    -g, <literal>--</literal>generatenames (optional)
                  </entry>
                  <entry>
                    <emphasis role="input">-g &lt;true/false&gt;</emphasis><?linebreak?>
                    For RCP AUTs, enter whether<?linebreak?>
                    to generate technical names. (<xref linkend="define-aut"/>)
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </listitem>
      </orderedlist>
      <para>
        <para role="tip">If your AUT is an RCP AUT, use
        <emphasis role="input">-data'&lt;WORKSPACE&gt;'</emphasis> after the executable
        file to specify the workspace the AUT should use.</para>
      </para>
    </section>
    <section id="create-aut-def">
      <title>Creating an AUT definition from a running AUT</title>
      <para>
        Once you have started an AUT using the
        <emphasis>autrun</emphasis> command, you can automatically
        generate an AUT definition (<xref linkend="define-aut"/>) for this AUT:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            In the Running AUTs View, select the AUT you want to
            define (it will be marked as an unknown AUT ID).
          </para>
        </listitem>
        <listitem>
          <para>
            Select:
            
            <para>
              <emphasis role="menuPath">Create AUT Definition</emphasis>
            </para>
            
            from the context menu.
          </para>
        </listitem>
        <listitem>
          <para>
            The AUT definition window will appear. Complete the dialog
            (<xref linkend="define-aut"/>) and click ”<emphasis>OK</emphasis>”.
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section id="starting-javafx-auts">
    <title>Starting JavaFX AUTs</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <para>
      You can start JavaFX AUTs via a configuration, but not via
      <emphasis>autrun</emphasis>.
    </para>
    <section id="configuring-a-java-aut-to-be-started-from-the-ite">
      <title>Configuring a Java AUT to be started from the ITE</title>
      <para>
        The AUT configuration dialog for Java FX has three different
        levels of detail: basic, advanced and expert.
      </para>
      <para>
        See the sections below for information on the different
        levels.
      </para>
    </section>
    <section id="basic-javafx-aut-configuration">
      <title>Basic JavaFX AUT configuration</title>
      <para>
        You can use the basic setting to configure your AUT if it can
        be started by an executable file (e.g. .bat, .exe, .cmd, .sh
        etc.). If your AUT is a JAR, then you can also use the
        executable file field to enter the Java executable (i.e. java
        or java.exe) and then enter the path to the JAR in the AUT
        Arguments field in the advanced configuration
        (<xref linkend="advanced-javafx-aut-config"/>).
      </para>
      <para>
        <para role="tip">You must be using a Java 8 JRE to be able to start
        JavaFX AUTs.</para>
      </para>
      <orderedlist>
        <listitem>
          <para>
            Enter the basic configuration details as described earlier
            (<xref linkend="basic-configuration-info"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the executable file name in the <emphasis>Executable
            File Name</emphasis> field. This path can be relative if
            you define a working directory (<xref linkend="advanced-javafx-aut-config"/>).
          </para>
        </listitem>
      </orderedlist>
      <para>
        For information on the advanced properties for the AUT
        configuration, see the next <xref linkend="advanced-javafx-aut-config"/>.
      </para>
    </section>
    <section id="advanced-javafx-aut-config">
      <title>Advanced JavaFX AUT configuration</title>
      <para>
        The advanced configuration dialog lets you create a working
        directory for your AUT, and add command-line arguments needed
        to start the AUT. If you entered a Java executable as the
        executable file name in the basic configuration, then you can
        enter <emphasis role="input">-jar &lt;JARFILE&gt;</emphasis> in the AUT
        Arguments field (<xref linkend="autconfigjavafxwithjar"/>).
      </para>
      <figure id="autconfigjavafxwithjar">
        <title>Example JavaFX AUT configuration</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/javafxconfigwithjar.png"/>
          </imageobject>
          <textobject><phrase>Example JavaFX AUT
          configuration</phrase></textobject>
        </mediaobject>
      </figure>
      <para>
        For information on the expert properties for the AUT
        configuration, see the next <xref linkend="expert-javafx-aut-config"/>.
      </para>
    </section>
    <section id="expert-javafx-aut-config">
      <title>Expert JavaFX AUT configuration</title>
      <para>
        You can use the expert dialog to configure more detailed
        information about how the AUT should be started.
      </para>
      <orderedlist>
        <listitem>
          <para>
            Enter any required <emphasis>System Environment
            Variables</emphasis>, in the format
            ”<emphasis>&lt;VARNAME&gt;=&lt;value&gt;</emphasis>”, i.e.
            ”<emphasis>PATH=C:∖ </emphasis>”. Separate each variable
            with a new line by pressing
            <emphasis role="input">»ENTER«</emphasis>.
          </para>
          <para>
            <para role="warning">Please be advised that ”embedding” the
            contents of one variable into another is not supported at
            this time. That is, if you have a variable named
            <literal>FOO</literal> whose value is
            ”<emphasis>abc</emphasis>”, and set the value of a second
            variable <literal>BAR</literal> to
            ”<emphasis>%FOO%def</emphasis>”, the second variable will
            <emphasis>not</emphasis> contain
            ”<emphasis>abcdef</emphasis>”, but rather the exact text
            ”<emphasis>%FOO%def</emphasis>”, without evaluating it.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            Select an activation method for your AUT. More information
            on AUT activation is available in the previous 
            <xref linkend="aut-activation"/>.
          </para>
        </listitem>
      </orderedlist>
    </section>
  </section>
  <section id="starting-web-auts">
    <title>Starting Web AUTs (HTML)</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <para>
      The AUT configuration dialog for HTML has three different levels
      of detail: basic, advanced and expert.
    </para>
    <para>
      See the sections below for information on the different levels.
    </para>
    <section id="basic-html-aut-configuration">
      <title>Basic HTML AUT configuration</title>
      <para>
        Use the basic setting to specify the URL and Browser you wish
        to start this AUT configuration on.
      </para>
      <orderedlist>
        <listitem>
          <para>
            Enter the basic configuration details as described earlier
            (<xref linkend="basic-configuration-info"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            You can optionally create a working directory to store
            files in (<xref linkend="using-working-dir-aut-config"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the URL of your AUT. <para role="warning">Relative paths to the
            URL cannot be used!</para>
          </para>
        </listitem>
        <listitem>
          <para>
            Select the browser you want to start the AUT in.
          </para>
        </listitem>
      </orderedlist>
      <para>
        For information on the advanced properties for the AUT
        configuration, see the next
        <xref linkend="advanced-html-aut-config"/>.
      </para>
    </section>
    <section id="advanced-html-aut-config">
      <title>Advanced HTML AUT configuration</title>
      <para>
        You can use the advanced dialog to enter the browser path for
        your browser. This lets you use a specific version of the
        browser (not available for Internet Explorer).
      </para>
      <para>
        You can also specify whether you want to be able to use the
        multi-window support in your tests for this AUT. If your AUT
        has functions that open new windows, then deactivate the
        <emphasis>Single Window Mode</emphasis> checkbox. Any AUTs
        that are running in multi-window mode show the Selenium
        console as well as the AUT when the AUT is started. The Object
        Mapping Editor for multi-window AUTs has a button to allow
        switching between multiple open windows for mapping
        components, and there are actions in the HTML unbound modules
        to allow you to switch between windows during the test.
      </para>
      <para>
        For information on the expert properties for the HTML AUT
        configuration, see the next
        <xref linkend="expert-html-aut-config"/>.
      </para>
    </section>
    <section id="expert-html-aut-config">
      <title>Expert HTML AUT configuration</title>
      <para>
        You can use the expert dialog to enter an <emphasis>ID
        attribute name</emphasis> (<xref linkend="design-for-testability-html-auts"/>). If you have used a
        specific tag to name components in your application, enter the
        tag in the Expert Configuration area. This information is then
        used instead of the <emphasis>name attribute in the object
        recognition</emphasis>.
      </para>
      <para>
        You can also select an activation method for your AUT. See the
        section on AUT activation (<xref linkend="aut-activation"/>) for more
        details.
      </para>
    </section>
  </section>
  <section id="starting-win-auts">
    <title>Starting Win AUTs (.NET, WPF)</title>
    <anchor role="helpid" id="autConfigSettingWizardPagePageContextId">Configuring an AUT</anchor>
    <section id="aut-configuration-for-windows-desktop-auts">
      <title>AUT configuration for Windows desktop AUTs</title>
      <para>
        To be able to start a Windows desktop AUT, you should select
        the <emphasis>win</emphasis> toolkit as the AUT toolkit in the
        AUT definition dialog.
      </para>
      <para>
        You must enter the following information to be able to start a
        <emphasis>win</emphasis> AUT:
      </para>
      <orderedlist>
        <listitem>
          <para>
            Enter the basic configuration details as described earlier
            (<xref linkend="basic-configuration-info"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the executable file name in the <emphasis>Executable
            File Name</emphasis> field. This path can be relative if
            you define a working directory (<xref linkend="using-working-dir-aut-config"/>)).
          </para>
        </listitem>
        <listitem>
          <para>
            Enter any necessary command-line arguments for the AUT in
            the <emphasis>AUT Arguments</emphasis> field.
          </para>
        </listitem>
      </orderedlist>
    </section>
  </section>
  <section id="starting-ios-auts">
    <title>Starting iOS AUTs</title>
    <section id="connecting-to-the-aut-agent">
      <title>Connecting to the AUT Agent</title>
      <para>
        The AUT Agent does not need to be started on the simulator or
        device for testing iOS AUTs. It does, however, need to be
        started to ensure that the communication can take place. The
        actual communication with the simulator or the device is
        accomplished using a port that is defined in the test AUT
        (<xref linkend="setting-up-ios-aut"/>) and configured in the AUT
        configuration (<xref linkend="configuring-ios-aut"/>).
      </para>
      <para>
        <para role="tip">Since the place where the AUT Agent is started is not
        important, we recommend starting it on localhost.</para>
      </para>
    </section>
    <section id="configuring-ios-aut">
      <title>Configuring an iOS AUT</title>
      <itemizedlist>
        <listitem>
          <para>
            Enter the basic configuration details as described earlier
            (<xref linkend="basic-configuration-info"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            The working directory currently has no effect.
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the iOS Device Host: this is the address of the
            device or simulator in the network that the AUT will run
            on. The host will either be a hostname or an IP address.
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the iOS Device Port: this is the port number that is
            available for communication between the AUT and the ITE.
            It is defined as a part of the setup of the AUT. If no
            port number has been specified in the AUT, the default of
            11022 will be used, and you should enter this number.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <para role="warning">Starting iOS AUTs with <emphasis>autrun</emphasis> is
        not supported.</para>
      </para>
    </section>
    <section id="starting-and-connecting-to-ios-auts">
      <title>Starting and connecting to iOS AUTs</title>
      <para>
        Unlike other AUTs, iOS AUTs are not
        <emphasis>started</emphasis> via the ITE, nor by the testexec.
        Instead, the AUT must have been made testable
        (<xref linkend="setting-up-ios-aut"/>), had component naming added
        (<xref linkend="design-for-testability-ios-auts"/>) and also be started on the simulator or
        device that it will be tested on. Once these prerequisites
        have been completed, you can connect to the AUT from the ITE
        by selecting the AUT from the list in the ”<emphasis>Start
        AUT</emphasis>” button on the toolbar. This does not start the
        AUT but connects to it.
      </para>
    </section>
  </section>
  <section id="starting-other-auts">
    <title>Starting other AUTs</title>
    <para>
      Any other details that are specific to a type of AUT are
      documented in the section on toolkit-specific information
      (<xref linkend="toolkit"/>).
    </para>
  </section>
</section>