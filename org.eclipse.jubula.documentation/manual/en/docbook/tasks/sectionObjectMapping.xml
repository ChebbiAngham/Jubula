<section id="object-mapping" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                           xmlns:xi="http://www.w3.org/2001/XInclude"
                                           xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Object mapping</title>
  <section id="object-mapping-1">
    <title>Object mapping</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      Object mapping is the joining of the component names you have
      specified in Test Steps to the real components in the AUT. Each
      component name you have specified in your Test Cases and used in
      a Test Suite will be shown in the Object Mapping Editor to be
      mapped.
    </para>
    <para>
      <para role="tip">New component names you have created in the Object
      Mapping Editor but have not yet used in Test Cases will also be
      shown in the Object Mapping Editor. </para>
    </para>
    <para>
      To be able to carry out object mapping, you must have:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          started and connected to the AUT Agent (<xref linkend="starting-and-connecting-aut-agent"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          created a Test Case containing Test Steps
          (<xref linkend="creating-test-cases"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          added Test Cases to a Test Suite (<xref linkend="working-with-suites"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          specified an AUT (<xref linkend="define-aut"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          configured an AUT if you want to start the AUT from the ITE
          (<xref linkend="configuringaut"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          chosen an AUT for the Test Suite (<xref linkend="configuring-test-suites-in-the-properties-view"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          checked that your current working language is supported by
          the chosen AUT.
        </para>
      </listitem>
      <listitem>
        <para>
          connected to the AUT Agent (<xref linkend="connect-aut-agent"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          started the AUT to be mapped (<xref linkend="starting-the-aut"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          opened the Object Mapping Editor (<xref linkend="opening-the-object-mapping-editor"/>)
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="object-mapping-editor">
    <title>Working with the Object Mapping Editor</title>
    <section id="opening-the-object-mapping-editor">
      <title>Opening the Object Mapping Editor</title>
      <anchor role="helpid" id="testExecViewContextId">Test Suite Browser</anchor>
      <orderedlist>
        <listitem>
          <para>
            Open the Object Mapping Editor by selecting the Test Suite whose components you want to map and selecting:
            
            <para>
              <emphasis role="menuPath">Open with</emphasis>--&gt;<emphasis role="menuPath">Object Mapping Editor</emphasis>. 
            </para>
            
            <para role="tip">The Object Mapping Editor also opens automatically when you start the Object Mapping Mode via the toolbar. </para>
            The Object Mapping Editor for the AUT used by this Test Suite will appear (see (<xref linkend="objectmappingeditor"/>)).
          </para>
          <para>
            <para role="tip">You can see the name of the AUT you are mapping in
            the tab of the editor</para>.
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section id="the-different-views-in-the-object-mapping-editor">
      <title>The different views in the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <para>
        You have two options to view the Object Mapping Editor - a
        split view and a tree view. Each view displays the same
        information, but in a different format. Depending on the view
        you choose, you can carry out different actions.
      </para>
      <para>
        <emphasis role="strong">The split view</emphasis><?linebreak?>
        This view is automatically shown when the Object Mapping Editor is opened. It contains three panels for the three main categories. In the split view, you can:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Assign (map) technical names to component names
            (<xref linkend="mapping-assigning-collected-technical-names-to-component-names"/>) by dragging component names onto
            technical names (either assigned or unassigned).
            <para role="tip">The split view is especially useful if you have
            many mappings – it lets you find component names and
            technical names separately to map them, without having to
            scroll through the whole tree.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            Create new component names for your tests
            (<xref linkend="creating-new-component-names"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Rename component names (<xref linkend="renaming-component-names"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Create categories and map into them (<xref linkend="working-with-categories-in-the-object-mapping-editor"/>).
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">The tree view</emphasis><?linebreak?>
        In the tree view, you can:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Assign (map) technical names to component names
            (<xref linkend="mapping-assigning-collected-technical-names-to-component-names"/>) by dragging component names onto
            technical names (either assigned or unassigned).
          </para>
        </listitem>
        <listitem>
          <para>
            Create new component names for your tests
            (<xref linkend="creating-new-component-names"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Rename component names (<xref linkend="renaming-component-names"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Create categories and map into them (<xref linkend="working-with-categories-in-the-object-mapping-editor"/>).
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="working-with-categories-in-the-object-mapping-editor">
      <title>Working with categories in the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <anchor role="helpid" id="dialogOMCategoryNewContextId">New Object Mapping Category Dialog</anchor>
      <para>
        <emphasis role="strong">Default categories in the Object Mapping Editor</emphasis><?linebreak?>
        The Object Mapping Editor tree view displays the following categories by default:
      </para>
      <variablelist>
        <varlistentry>
          <term>
            Unassigned component names:
          </term>
          <listitem>
            <para>
              these are the names you have used in your Test Cases or
              component names that you have created
              (<xref linkend="creating-new-component-names"/>). They are unassigned
              because they have not yet been mapped to a technical
              name.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Unassigned technical names:
          </term>
          <listitem>
            <para>
              these are the names that you have collected from the AUT
              (<xref linkend="collecting-components-technical-names-from-the-aut"/>), but not yet assigned to
              component names.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Assigned names:
          </term>
          <listitem>
            <para>
              there are pairs of names that have been mapped to each
              other. Each technical name can be mapped to one or more
              component names. This mapping tells the ITE which actual
              components you are referring to in your Test Cases.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        <emphasis role="strong">Creating categories in the Object Mapping Editor</emphasis><?linebreak?>
        We recommend creating categories in the Object Mapping Editor to make your mapping work easier.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            You can create categories and subcategories in the Object
            Mapping Editor (tree view) by:
          </para>
          <orderedlist>
            <listitem>
              <para>
                Selecting the category you want your new category to
                appear in (e.g. in ”<emphasis>assigned
                names</emphasis>”).
              </para>
            </listitem>
            <listitem>
              <para>
                Selecting ”<emphasis>create category</emphasis>” from
                the context-sensitive menu.
              </para>
            </listitem>
            <listitem>
              <para>
                Entering a name for the category <para role="warning">You can’t have
                two categories with the same name at the same level.</para>
              </para>
            </listitem>
          </orderedlist>
        </listitem>
        <listitem>
          <para>
            When you are mapping, you can choose which category to map
            into. See the next <xref linkend="working-with-categories-in-the-object-mapping-editor"/> for details.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <para role="tip">It is a good idea to create categories in the Object
        Mapping Editor.</para>
      </para>
      <para>
        <emphasis role="strong">Mapping into categories in the Object Mapping Editor</emphasis><?linebreak?>
        Once you have created categories in the Object Mapping Editor, you can choose to map technical names collected from the AUT directly into a category. This can help if you have created a category for each dialog/window, and you want to map all of the components from it into one category.
      </para>
      <orderedlist>
        <listitem>
          <para>
            When you are in the Object Mapping Mode, right-click onthe category you want to map into and select:
            
            <para>
              <emphasis role="menuPath">Map components into this category</emphasis>
            </para>
            
            to make the technical names you collect from the AUT appear in this subcategory. <para role="tip">If you have already mapped the technical name, the name will be shown in the Object Mapping Editor, but not moved into the category.</para> <para role="tip">The status bar displays which category you are mapping into.</para>
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section id="the-configuration-view-in-the-object-mapping-editor">
      <title>The configuration view in the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <para>
        In the configuration view in the Object Mapping Editor you can
        alter the object recognition for the test execution.
      </para>
      <para>
        <emphasis role="strong">Understanding object recognition</emphasis><?linebreak?>
        Object recognition during test execution is based on a calculation which takes various factors into account. For some applications, some factors may be more important than others, and you can change their weighting accordingly.
      </para>
      <para>
        The object location is a <emphasis>heuristic</emphasis>
        process. During test execution, a calculation is made for each
        component in the AUT to see how similar it is to the
        originally mapped component. This calculation is based
        primarily on the component type – if you mapped a combo box,
        only combo boxes will considered. For each component of the
        same type, the similarity to the original is calculated using
        weighted properties. The factors used in the calculation are:
      </para>
      <variablelist>
        <varlistentry>
          <term>
            Name:
          </term>
          <listitem>
            <para>
              The name of the object within the AUT code, as given by
              the developer (if a name was given). 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Path:
          </term>
          <listitem>
            <para>
              The route through the AUT hierarchy to get to this
              component.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Context:
          </term>
          <listitem>
            <para>
              The components in the vicinity of this component.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Threshold:
          </term>
          <listitem>
            <para>
              This determines what percentage value a component in the
              AUT must have in order to be considered as the
              originally mapped component. Components with a value
              under the threshold are not considered. The component
              with the highest value above the threshold is chosen
              during execution.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        <emphasis role="strong">Options for object
        recognition</emphasis> You can change the profile used during
        test execution using the combo box:
      </para>
      <variablelist>
        <varlistentry>
          <term>
            Standard:
          </term>
          <listitem>
            <para>
              This is the default profile. It has a high value for
              name weight and lower values for context and path. The
              threshold is 85%.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Strict:
          </term>
          <listitem>
            <para>
              In this profile, the values for name, path and context
              are the same as in the standard profile. The threshold
              is at 100%. This means that a component must exactly
              correspond to the originally mapped component.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Given names:
          </term>
          <listitem>
            <para>
              In this profile, only the component name is considered.
              A component will only be selected if it has the same
              name as the originally mapped component. This profile
              can be used when you are sure that all of the components
              in the AUT have unique names.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Custom:
          </term>
          <listitem>
            <para>
              This profile lets you move the sliders yourself. You can
              lock sliders to stop them being affected by other
              sliders.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <figure>
        <title>Object Mapping Configuration</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/objectmappingpref.png"/>
          </imageobject>
          <textobject><phrase>Object Mapping
          Configuration</phrase></textobject>
        </mediaobject>
      </figure>
      <para>
        <para role="warning">Take care when manually customizing the object mapping
        settings. You may have test execution problems if you have set
        the values too strictly, or not strictly enough.</para>
      </para>
    </section>
    <section id="refreshing-the-object-mapping-editor">
      <title>Refreshing the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <orderedlist>
        <listitem>
          <para>
            Select <emphasis>refresh</emphasis> from the
            context-sensitive menu in the Object Mapping Editor or
            press <emphasis role="input">»F5«</emphasis> to refresh the
            Object Mapping Editor.
          </para>
        </listitem>
        <listitem>
          <para>
            Confirm that you want to want to refresh the editor.
          </para>
        </listitem>
      </orderedlist>
      <para>
        When you refresh the Object Mapping Editor, any new component
        names which have been added to Test Suites for this AUT are
        collected.
      </para>
    </section>
    <section id="finding-components-in-the-aut-via-the-object-mapping-editor-highlight-in-aut">
      <title>Finding components in the AUT via the Object Mapping Editor: highlight in AUT</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <para>
        In the Object Mapping Editor, you can search for:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            All the places where a component name has been used in the
            test (<xref linkend="searching-for-places-where-a-component-name-has-been-used"/>)
          </para>
        </listitem>
        <listitem>
          <para>
            The specific place where a particular component name comes
            from in the test (<xref linkend="searching-for-places-where-a-component-name-has-been-used"/>)
          </para>
        </listitem>
        <listitem>
          <para>
            The technical component in the AUT (see below).
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">Highlighting a component in the AUT</emphasis>
      </para>
      <para>
        To search for components in the AUT, the Object Mapping Editor
        must be open (<xref linkend="opening-the-object-mapping-editor"/>),
        and the AUT must be running (<xref linkend="starting-the-aut"/>) in the
        Object Mapping Mode (<xref linkend="collecting-components-technical-names-from-the-aut"/>).
      </para>
      <orderedlist>
        <listitem>
          <para>
            In the Object Mapping Editor, right-click on the technical name whose component you want to find in the AUT and select:
            
            <para>
              <emphasis role="menuPath">Highlight in AUT</emphasis>
            </para>
            
            from the context-sensitive menu.
          </para>
        </listitem>
        <listitem>
          <para>
            The component whose technical name you selected will be
            highlighted with a green border in the AUT. <para role="tip">You can
            only highlight components that are currently visible in
            the AUT.</para>
          </para>
        </listitem>
      </orderedlist>
    </section>
  </section>
  <section id="deleting-from-the-object-mapping-editor">
    <title>Deleting from the Object Mapping Editor</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <orderedlist>
      <listitem>
        <para>
          You can delete items from the Object Mapping Editor using
          the ”<emphasis>delete</emphasis>” option from the
          context-sensitive menu.
        </para>
      </listitem>
      <listitem>
        <para>
          You can also select the item you want to delete and press
          <emphasis role="input">»DELETE«</emphasis>.
        </para>
      </listitem>
      <listitem>
        <para>
          If you delete a component name that is still used in a Test
          Case for this Test Suite it will reappear when you select
          ”<emphasis>refresh</emphasis>” from the context-sensitive
          menu.
        </para>
      </listitem>
    </orderedlist>
    <para>
      <para role="tip">If you want to remove all unused mappings from the Object
      Mapping Editor, then use the <emphasis>Cleanup</emphasis> option
      (<xref linkend="removing-unused-component-names-from-the-object-mapping-editor"/>).</para>
    </para>
    <section id="removing-unused-component-names-from-the-object-mapping-editor">
      <title>Removing unused component names from the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <para>
        Over time, your Project will change, and these changes may
        mean that component names you had previously used in Test
        Suites, then mapped to technical names via the Object Mapping,
        are no longer used. This results in object mappings in which
        the component name is no longer used in the test for this AUT.
        Such component names can be recognized by the fact that
        <emphasis>Show corresponding specification</emphasis> in the
        Object Mapping Editor (<xref linkend="searching-for-places-where-a-component-name-has-been-used"/>)
        returns no search results in the search result view (i.e. the
        component name is no longer used in the test), or if the
        search result view shows only Test Cases that are used in
        other AUTs. If you perform <emphasis>Show where
        used</emphasis> in the Component Names Browser
        (<xref linkend="searching-for-places-where-a-component-name-has-been-used"/>) and the
        only search result is a mapping, then this is also a component
        name that is no longer used in the test.
      </para>
      <para>
        You can delete any component names from the Object Mapping
        Editor that are unused in the Project for this AUT:
      </para>
      <orderedlist>
        <listitem>
          <para>
            In the Object Mapping Editor, select:
            
            <para>
              <emphasis role="menuPath">Cleanup</emphasis>--&gt;<emphasis role="menuPath">unused component names</emphasis>
            </para>

            from the context-sensitive menu.
          </para>
        </listitem>
        <listitem>
          <para>
            The cleanup operation starts, and a progress dialog is
            shown while unused names are being searched for. Depending
            on the size of your Project, this search may take some
            time.
          </para>
        </listitem>
        <listitem>
          <para>
            If the Object Mapping Editor contains component names that
            are not used in any of the Test Suites for this AUT
            (either component names that are already mapped, or are
            still unassigned), then they are shown in a
            <emphasis>Delete unused component names</emphasis> dialog.
            <para role="tip">If no component names are found, then you will see
            a message informing you of this.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            In the dialog to delete unused component names, you can
            see which component names have been identified for
            deletion. You can deselect individual component names to
            opt not to delete them. Once you have specified which
            component names should be deleted, click
            ”<emphasis>OK</emphasis>”.
          </para>
        </listitem>
        <listitem>
          <para>
            The component names you specify will be deleted from the
            Object Mapping Editor. Save the editor to save the
            changes. <para role="warning">Removing component names from the Object
            Mapping Editor does not mean that the component names are
            deleted from the Project. However, if the deletion from
            the object map means that the component name is now used
            nowhere in the Project, then it will appear under the
            <emphasis>Unused Component Names</emphasis> category in
            the Component Names Browser and can be deleted from the
            whole Project (<xref linkend="deleting-unused-component-names"/>).</para>
          </para>
        </listitem>
      </orderedlist>
    </section>
  </section>
  <section id="collecting-components-technical-names-from-the-aut">
    <title>Collecting components (technical names) from the AUT</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      Once your test specification is ready, you can
      <emphasis>collect</emphasis> components (technical names) from
      the AUT to <emphasis>map</emphasis> (assign) to the component
      names you used in your tests.
    </para>
    <para>
      To collect components from the AUT, you must have:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          started and connected to the AUT Agent (<xref linkend="starting-and-connecting-aut-agent"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          created a Test Case containing Test Steps
          (<xref linkend="creating-test-cases"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          added Test Cases to a Test Suite (<xref linkend="working-with-suites"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          specified an AUT (<xref linkend="define-aut"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          configured an AUT (<xref linkend="configuringaut"/>) if you want to
          start the AUT from the ITE
        </para>
      </listitem>
      <listitem>
        <para>
          chosen an AUT for the Test Suite (<xref linkend="configuring-test-suites-in-the-properties-view"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          checked that your current working language is supported by
          the chosen AUT.
        </para>
      </listitem>
      <listitem>
        <para>
          started the AUT to be mapped (<xref linkend="starting-the-aut"/>)
        </para>
      </listitem>
      <listitem>
        <para>
          opened the object mapping editor (<xref linkend="opening-the-object-mapping-editor"/>)
        </para>
      </listitem>
    </itemizedlist>
    <orderedlist>
      <listitem>
        <para>
          Start the Object Mapping Mode by clicking the arrow next to
          the <emphasis>Start Object Mapping Mode</emphasis> <mediaobject role="icon" file="../images/startOM.png"/>
          on the toolbar and selecting which AUT (based on the AUT ID) you
          want to map. 
        </para>
        <para>
          <para role="tip">If you have the same AUT running more than once, you
          will only be able to collect components from the AUT whose
          ID you chose. The object map for AUTs that are the same is,
          however, identical.</para>
        </para>
        <para>
          The status bar will show that the Object Mapping Mode is
          active.
        </para>
      </listitem>
      <listitem>
        <para>
          Bring the AUT into focus by clicking on its titlebar.
        </para>
      </listitem>
      <listitem>
        <para>
          Collect the component as described in the sections below for
          the specific toolkits.
        </para>
      </listitem>
      <listitem>
        <para>
          In the Object Mapping Editor, the technical name for this
          component will appear in the <emphasis>unassigned technical
          names</emphasis> category. <para role="tip">If you have already mapped
          this component, it will be highlighted in the Object Mapping
          Editor.</para>
        </para>
      </listitem>
      <listitem>
        <para>
          When you collect a technical name, it is displayed with a
          colored dot in the Object Mapping Editor. The color of the
          dot indicates the strength of the component recognition for
          this component, <emphasis>in the current state of the
          AUT</emphasis> (<xref linkend="understanding-the-colored-dots-when-collecting-component-names-in-the-object-mapping-editor"/>).
        </para>
      </listitem>
      <listitem>
        <para>
          Collect all the names you need from the AUT and then click
          the <emphasis>Stop Object Mapping Mode</emphasis> button
          <mediaobject role="icon" file="../images/stopOM.png"/> on
          the toolbar.
        </para>
      </listitem>
      <listitem>
        <para>
          You can now map (assign) the component names you used in
          your Test Cases to the technical names you have collected
          from the AUT <xref linkend="mapping-assigning-collected-technical-names-to-component-names"/>.
        </para>
      </listitem>
    </orderedlist>
    <section id="for-java-and-win-.net-auts">
      <title>For Java and Win (.NET) AUTs:</title>
      <itemizedlist>
        <listitem>
          <para>
            In the AUT for which the Object Mapping Mode was started,
            move the cursor over components. They will be highlighted
            with a green border (see <xref linkend="greenborders"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            To collect a technical name for a component, hover the
            cursor over the component whose name you want to collect.
          </para>
        </listitem>
        <listitem>
          <para>
            Press <emphasis role="input">»CTRL+SHIFT+Q«</emphasis>.
            <para role="tip">You can change the key combination for the object
            mapping in the object mapping preferences
            (<xref linkend="object-mapping-preferences"/>). This is a good idea if the
            current key combination has a specific meaning in your
            AUT. You can also set the object mapping combination to a
            mouse click if your AUT does not accept key combinations.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            If no component is collected, then you may need to write
            an extension to recognize and test the component. More
            information on this is available in the Extension Manual.
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="for-html-auts">
      <title>For HTML AUTs:</title>
      <itemizedlist>
        <listitem>
          <para>
            While the Object Mapping Mode is active, the AUT cannot be
            used.
          </para>
        </listitem>
        <listitem>
          <para>
            To collect a technical name for a component, click the
            component whose name you want to collect.
          </para>
        </listitem>
        <listitem>
          <para>
            If the AUT you are mapping has been specified as a
            multi-window AUT in the AUT configuration
            (<xref linkend="advanced-html-aut-config"/>), then you will see an extra
            button in the Object Mapping Editor. When multiple windows
            are open, then you can choose between the windows – the
            window you choose is the window in which the mapping will
            take place. You should open the new window before starting
            the Object Mapping Mode. You can switch back and forth
            between windows by selecting them in the Object Mapping
            Editor.
          </para>
        </listitem>
        <listitem>
          <para>
            You will also need to use the HTML actions to switch
            between windows in your test.
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="object-mapping-ios">
      <title>For iOS AUTs:</title>
      <para>
        Object mapping for iOS AUTs is done by tapping the component
        or clicking it if you are working on a simulator.
      </para>
      <para>
        There are three types of tap you can use, with different
        effects. We recommend reading the information on addressing
        the correct component in your iOS tests in the section on
        Toolkits (<xref linkend="addressing-correct-component-ios"/>).
      </para>
      <variablelist>
        <varlistentry>
          <term>
            Single tap:
          </term>
          <listitem>
            <para>
              This collects the component directly underneath your
              finger or the mouse cursor.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Double tap:
          </term>
          <listitem>
            <para>
              This collects the component directly underneath your
              finger or the mouse cursor, plus its direct parent. For
              example, if you want to collect a OK button, but you
              click on the ”OK” label, then a double tap will collect
              both the label and the button. Double taps are
              recommended for collecting any components that have text
              on them – a single tap may only collect the label,
              whereas a double-tap will collect the label and the
              component it is in.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            Long tap:
          </term>
          <listitem>
            <para>
              This collects the component directly underneath your
              finger or the mouse cursor, plus all of its parents.
              This is useful if you want to collect disabled
              components (which cannot be collected with a single
              tap), or if you want to address components that are
              ”hard to reach” with a single or double tap.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        <para role="tip">The AUT functionality is deactivated during object
        mapping – clicks on buttons won’t close popovers, for example.
        To move to another screen, you must stop the Object Mapping
        Mode, switch, and then restart the Object Mapping Mode to
        continue mapping.</para>
      </para>
    </section>
    <section id="understanding-the-colored-dots-when-collecting-component-names-in-the-object-mapping-editor">
      <title>Understanding the colored dots when collecting component names in the Object Mapping Editor</title>
      <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
      <para>
        When technical names are collected from the AUT, they appear
        in the Object Mapping Editor with a colored dot. The color of
        the dot corresponds to the strength of the component
        recognition for this component <emphasis>at the time of
        collecting</emphasis>.
      </para>
      <variablelist>
        <varlistentry>
          <term>
            A green dot
          </term>
          <listitem>
            <para>
              signifies that the component can be found as an exact
              match, and that only this component was above the
              threshold (<xref linkend="the-configuration-view-in-the-object-mapping-editor"/>) (i.e. only this
              component was considered as possible.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            A yellow dot
          </term>
          <listitem>
            <para>
              means that the component can be found as an exact match,
              but that other components were also above the threshold,
              i.e. this was not the only component considered
              possible.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            A red dot
          </term>
          <listitem>
            <para>
              means that the component can not currently be found if a
              test is executed. The recognition value for the
              component is below the current threshold.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        You can use this information to identify components that will
        not be recognized in the current state of the AUT before
        running the test.
      </para>
      <para>
        <para role="tip">The colored dot disappears after saving. It is not a
        measurement of the component state over time, but only at the
        moment when the component was collected. You can see how well
        each component was actually located during a test by looking
        in the test result reports. Each Test Step provides
        information on the match heuristic for each component.</para>
      </para>
    </section>
  </section>
  <section id="mapping-assigning-collected-technical-names-to-component-names">
    <title>Mapping (assigning) collected technical names to component names</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      Once you have collected the components from the AUT that you will use during the test
      (<xref linkend="collecting-components-technical-names-from-the-aut"/>), you can then map them to the component
      names you used in your Test Cases.
    </para>
    <orderedlist>
      <listitem>
        <para>
          In the Object Mapping Editor, in the split view or the tree
          view (<xref linkend="the-different-views-in-the-object-mapping-editor"/>), you will see the component names
          you have created (<xref linkend="creating-new-component-names"/>) and/or used
          in your Test Cases, as well as the names you have collected
          from the AUT. The names are grouped into categories of
          unassigned and assigned names (<xref linkend="working-with-categories-in-the-object-mapping-editor"/>).
        </para>
      </listitem>
      <listitem>
        <para>
          To map a component name to a technical name, you must drag
          the <emphasis>unassigned component name</emphasis> onto the
          corresponding <emphasis>unassigned technical name</emphasis>
          that you want this component name to refer to.
        </para>
      </listitem>
      <listitem>
        <para>
          When a component name has been assigned to a techical name,
          the joined names appear in the <emphasis>assigned
          names</emphasis> category. The component type for the
          component name is adjusted so that it reflects the type of
          component it hasbeen mapped to (<xref linkend="understanding-the-component-hierarchy"/>).
        </para>
        <para>
          <para role="tip">You can also ”unassign” component names from
          technical names by dragging the component name back into the
          <emphasis>unassigned component names</emphasis> category</para>
        </para>
      </listitem>
      <listitem>
        <para>
          Save the changes in the editor. <para role="tip">You will only be able
          to map component names to technical names if their types are
          compatible (<xref linkend="understanding-the-component-hierarchy"/>).</para>
        </para>
      </listitem>
    </orderedlist>
    <figure id="objectmappingeditor">
      <title>Object Mapping Editor</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="../images/objectmappinghowto.png"/>
        </imageobject>
        <textobject><phrase>Object Mapping
        Editor</phrase></textobject>
      </mediaobject>
    </figure>
  </section>
  <section id="object-mapping-and-aut-changes">
    <title>Object mapping and AUT changes</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      If your AUT has changed from one version to the next, your tests may still run,
      depending on the nature and extent of the changes.
    </para>
    <para>
      <para role="tip">Please bear in mind that changing the look and feel of
      your AUT may lead to different technical names for the
      components in your AUT if you have not named the components.</para>
    </para>
    <para>
      If your test does not run, a few simple steps will update it.
    </para>
    <para>
      If you get a <emphasis>component not found</emphasis> error, or
      the wrong component is selected during the test, remap the new
      component from the AUT and assign it to your component name.
    </para>
    <para>
      This updates this component for the whole test.
    </para>
    <figure id="greenborders">
      <title>Green Border around Supported Component</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="../images/greenborders.png"/>
        </imageobject>
        <textobject><phrase>Green Border around Supported
        Component</phrase></textobject>
      </mediaobject>
    </figure>
  </section>
  <section id="viewing-properties-for-a-component-in-the-object-mapping-mode">
    <title>Viewing properties for a component in the Object Mapping Mode</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      When you collect a component from a Swing, SWT/RCP or JavaFX AUT
      in the Object Mapping Mode (<xref linkend="collecting-components-technical-names-from-the-aut"/>), you can see
      additional information on the properties for that component in
      the Properties View.
    </para>
    <para>
      The property information shows you which properties the
      component has, and their values. If a property is not
      accessible, you will see a notice informing you of this.
    </para>
    <para>
      You can use this information to help you write tests that use
      the actions <emphasis>check property</emphasis> and
      <emphasis>store property</emphasis>.
    </para>
    <para>
      The property information is not saved when the Object Mapping
      Editor is saved: to view property information again, you must
      collect the component in the Object Mapping Mode again.
    </para>
    <para>
      <para role="tip">Property information can be transient, i.e. it can change
      as the component or AUT changes. To make sure that you collect
      the right property, collect the component when it is in the
      state that you want it to have. A simple example is the color of
      a component: if you have a component can be green or red and you
      want to check that it is red, then you should collect it while
      it is red to see the correct property. </para>
    </para>
  </section>
</section>