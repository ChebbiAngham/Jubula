<section id="using-the-test-executor-for-testing-from-the-command-line" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                                                      xmlns:xi="http://www.w3.org/2001/XInclude"
                                                                                      xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Using the test executor for testing from the command line</title>
  <anchor role="helpid" id="problemViewContextId">Problem View</anchor>
  <para>
    You can also run tests using the test executor. From the command
    line interface, you can select and start tests.
  </para>
  <para>
    <para role="tip">It is especially important to ensure that your test
    contains a suitable startup module to wait for the AUT, perform
    the login if necessary and reset the AUT to a defined state when
    you are running tests from the command line. </para>
  </para>
  <section id="starting-the-test-executor">
    <title>Starting the test executor</title>
    <orderedlist>
      <listitem>
        <para>
          In a command line interface, locate the installation
          directory and open the ITE directory within it.
        </para>
      </listitem>
      <listitem>
        <para>
          Enter <emphasis role="input">testexec.exe</emphasis>.
        </para>
        <para>
          This will run the executable
          <emphasis>testexec.exe</emphasis>.
        </para>
      </listitem>
      <listitem>
        <para>
          Do not press <emphasis role="input">»ENTER«</emphasis> until you
          have entered the necessary parameters. See the next section
          for details on the parameters.
        </para>
      </listitem>
    </orderedlist>
  </section>
  <section id="parameters-for-the-test-executor">
    <title>Parameters for the test executor</title>
    <itemizedlist>
      <listitem>
        <para>
          Once you have browsed to the correct directory and entered
          <emphasis role="input">testexec.exe</emphasis>, you can enter the parameters for the
          test execution.
        </para>
      </listitem>
      <listitem>
        <para>
          The test executor has various parameters
          (<xref linkend="cmdlineparams"/>):
        </para>
      </listitem>
    </itemizedlist>
    <para>
      <table id="cmdlineparams">
        <title>testexec parameters</title>
        <tgroup cols="2">
          <colspec align="left" colwidth="40%"/>
          <colspec align="left"/>
          <thead>
            <row>
              <entry>Detail</entry>
              <entry>Parameter</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Help</entry>
              <entry>
                <emphasis role="input">-h</emphasis><?linebreak?>
                Gives parameter help
              </entry>
            </row>
            <row>
              <entry>Project name</entry>
              <entry>
                <emphasis role="input">-project &lt;project name&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-project "ExampleProject"</emphasis>
              </entry>
            </row>
            <row>
              <entry>Configuration file</entry>
              <entry>
                <emphasis role="input">-c &lt;path to configuration file&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-c "&lt;pathToQADocs&gt;/config.xml"</emphasis><?linebreak?>
                Use this instead of entering arguments via the command line (<xref linkend="using-a-config-file"/>)
              </entry>
            </row>
            <row>
              <entry>Database URL (optional)</entry>
              <entry>
                <emphasis role="input">-dburl &lt;URL&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-dburl "db.example.de"</emphasis><?linebreak?>
                If you enter this, you do not need to enter the <emphasis>-data</emphasis> or <emphasis>-dbscheme</emphasis> parameter (<xref linkend="using-the-dburl"/><?linebreak?>)
                You can find the dburl in the database preferences<?linebreak?>
                If no URL is given, the default will be used.
              </entry>
            </row>
            <row>
              <entry>Database username</entry>
              <entry>
                <emphasis role="input">-dbuser &lt;username&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-dbuser "username"</emphasis>
              </entry>
            </row>
            <row>
              <entry>Database password</entry>
              <entry>
                <emphasis role="input">-dbpw &lt;password&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-dbpw "password"</emphasis>
              </entry>
            </row>
            <row>
              <entry>Server (optional)</entry>
              <entry>
                <emphasis role="input">-server &lt;AUT Agent hostname&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-server "localhost"</emphasis><?linebreak?>
                This is optional if you want to use the embedded AUT Agent (<xref linkend="using-seperate-or-embedded-agent"/>).
              </entry>
            </row>
            <row>
              <entry>Port number (optional)</entry>
              <entry>
                <emphasis role="input">-port &lt;port number&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-port "60000"</emphasis><?linebreak?>
                This is optional if you are using the embedded AUT Agent and want to use a dynamically chosen port.
                If you are using the embedded AUT Agent and want to specify the port then you should still enter a port number.
                If you are working with a separately started AUT Agent, this argument is required (<xref linkend="using-seperate-or-embedded-agent"/>).
              </entry>
            </row>
            <row>
              <entry>Language</entry>
              <entry>
                <emphasis role="input">-language &lt;language code&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-language "en_US"</emphasis>
              </entry>
            </row>
            <row>
              <entry>Test Suite</entry>
              <entry>
                <emphasis role="input">-testsuite &lt;testsuite name&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-testsuite "suite1"</emphasis><?linebreak?>
                Use to start a Test Suite (<xref linkend="test-exec-suite-or-job"/>)<?linebreak?>
                Only one Test Suite or Test Job can be started
              </entry>
            </row>
            <row>
              <entry>Test Job</entry>
              <entry>
                <emphasis role="input">-testjob &lt;testjob name&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-testjob "job1"</emphasis><?linebreak?>
                Use to start a Test Job (<xref linkend="test-exec-suite-or-job"/>).<?linebreak?>
                Only one Test Suite or Test Job can be started.
              </entry>
            </row>
            <row>
              <entry>AUT configuration name</entry>
              <entry>
                <emphasis role="input">-autconfig &lt;configuration name&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-autconfig "localconfiguration"</emphasis><?linebreak?>
                Use when starting an AUT via a configuration (<xref linkend="test-exec-suite-or-job"/>).
              </entry>
            </row>
            <row>
              <entry>AUT ID</entry>
              <entry>
                <emphasis role="input">-autid &lt;ID&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-autid "SimpleAdder1"</emphasis><?linebreak?>
                Use when AUT was started via autrun (<xref linkend="test-exec-suite-or-job"/>).
              </entry>
            </row>
            <row>
              <entry>Data directory (optional)</entry>
              <entry>
                <emphasis role="input">-datadir &lt;path to external test data directory&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-datadir "&lt;pathToQADocs&gt;/data"</emphasis><?linebreak?>
                Use when you have test data for the test. e.g. from Excel.<?linebreak?>
                You can use relative paths (relative to the platform working directory).
              </entry>
            </row>
            <row>
              <entry>Result directory (optional)</entry>
              <entry>
                <emphasis role="input">-resultdir &lt;path to directory&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-resultdir "&lt;pathToQADocs&gt;/results"</emphasis><?linebreak?>
                Use when you want HTML and XML test result reports to be produced by the testexec.<?linebreak?>
                Test results will still be written to the database.<?linebreak?>
                You can use relative paths (relative to the platform working directory).
              </entry>
            </row>
            <row>
              <entry>No run option (optional)</entry>
              <entry>
                <emphasis role="input">-n</emphasis><?linebreak?>
                e.g. <emphasis>-n</emphasis><?linebreak?>
                Performs various pre-execution checks.<?linebreak?>
                There is a set of parameters to configure the no run (<xref linkend="working-with-no-run"/>).
              </entry>
            </row>
            <row>
              <entry>Quiet option (optional)</entry>
              <entry>
                <emphasis role="input">-q</emphasis><?linebreak?>
                e.g. <emphasis>-q</emphasis><?linebreak?>
                Does not give out test information.
              </entry>
            </row>
            <row>
              <entry>Timeout (optional)</entry>
              <entry>
                <emphasis role="input">-timeout &lt;timeout in seconds&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-timeout "3600"</emphasis><?linebreak?>
                Enter an optional timeout for testexec.
              </entry>
            </row>
            <row>
              <entry>No screenshot (optional)</entry>
              <entry>
                <emphasis role="input">-s</emphasis><?linebreak?>
                no screenshots will be taken on errors.
              </entry>
            </row>
            <row>
              <entry>No screenshots in HTML and XML (optional)</entry>
              <entry>
                <emphasis role="input">-sx</emphasis><?linebreak?>
                screenshots will be taken on errors and written to the database but they will not appear
                in the XML and HTML reports created if you have specified a resultdir.
              </entry>
            </row>
            <row>
              <entry>Test results not relevant (optional)</entry>
              <entry>
                <emphasis role="input">-r</emphasis><?linebreak?>
                Flags the test results as not relevant in the test result summary (<xref linkend="test-result-preferences"/>).
              </entry>
            </row>
            <row>
              <entry>Workspace</entry>
              <entry>
                <emphasis role="input">-data &lt;path to workspace&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-data "&lt;pathToQADocs&gt;/workspace"</emphasis><?linebreak?>
                The ITE workspace with the preference settings for the database connection<?linebreak?>
                This is optional if you enter the <emphasis>-dburl</emphasis> parameter (<xref linkend="using-the-dburl"/>)
              </entry>
            </row>
            <row>
              <entry>Database scheme</entry>
              <entry>
                <emphasis role="input">-dbscheme &lt;scheme&gt;</emphasis><?linebreak?>
                e.g. <emphasis>-dbscheme "embedded"</emphasis><?linebreak?>
                This is optional if you enter the <emphasis>-dburl</emphasis> parameter (<xref linkend="using-the-dburl"/>)
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <section id="using-seperate-or-embedded-agent">
      <title>Using a separate AUT Agent or the embedded
      AUT Agent</title>
      <itemizedlist>
        <listitem>
          <para>
            When using testexec, you have the choice between working
            with an AUT Agent that you start separately, or using an
            embedded AUT Agent that is started automatically by
            testexec.
          </para>
        </listitem>
        <listitem>
          <para>
            If you want to use a separately started AUT Agent, then
            the AUT Agent must be started on the machine you are
            testing on. Enter the parameters for the server and port
            number to connect to this AUT Agent.
            <para role="warning">If you are working with Test Jobs, you must use a separately started AUT Agent, because you will require the AUT Agent to start the AUT via <emphasis>autrun</emphasis>.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            If you want to have testexec start and connect to an
            embedded AUT Agent automatically, then you have two
            options:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                You can leave out both the parameters for the server
                and the port number. This will result in an embedded
                AUT Agent being started on a dynamically chosen port.
              </para>
            </listitem>
            <listitem>
              <para>
                You can leave out the server parameter, but still
                enter a port number. This will result in an embedded
                AUT Agent being started on the port you define.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
    <section id="test-exec-suite-or-job">
      <title>Test Suites and Test Jobs</title>
      <itemizedlist>
        <listitem>
          <para>
            You can either enter a Test Suite to be executed or a
            Test Job. Only one of these two commands is accepted for
            the test executor.
          </para>
        </listitem>
        <listitem>
          <para>
            If you are starting a Test Suite, your AUT will be
            started from its configuration. You must enter the
            configuration name using the correct parameter for the
            testexec.
          </para>
        </listitem>
        <listitem>
          <para>
            If you are starting a Test Job, you must make sure that
            the first AUT you require is already started with the
            <emphasis>autrun</emphasis> command. You must then enter the AUT
            ID as a parameter for the testexec. Any other AUTs
            required during the test must either also be started
            already, or started as a part of the test itself. When
            working with Test Jobs, you must use a separately started
            AUT Agent. You cannot use the embedded AUT Agent with
            testexec when you are starting a Test Job.
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="using-the-dburl">
      <title>Using the dburl instead of workspace and dbscheme</title>
      <para>
        You can use the <emphasis>dburl</emphasis> parameter to specify which
        database should be used instead of entering the dbscheme and
        workspace parameters. This has the advantage that you do not
        need to create a workspace on the test machine that is
        configured for the correct database.
      </para>
    </section>
    <section id="starting-the-test-execution-via-testexec">
      <title>Starting the test execution via testexec</title>
      <orderedlist>
        <listitem>
          <para>
            Once you have entered all the necessary parameters, press
            <emphasis role="input">»ENTER«</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>
            The client will connect to the AUT Agent(either the defined
            separate AUT Agent or it will start an embedded
            AUT Agent then connect to it), connect to the database,
            open the Project, start the AUT (for a
            Test Suite) or connect to it (for Test Jobs) and then
            execute the Test Suite or Test Job you specified.
          </para>
        </listitem>
        <listitem>
          <para>
            Once the test has finished, the client will show an exit
            code.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                ”<emphasis>Exit code: 0</emphasis>” indicates that the test was
                successful.
              </para>
            </listitem>
            <listitem>
              <para>
                ”<emphasis>Exit code: 1</emphasis>” indicates that the test
                contained an error.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            <para role="tip">To stop the test execution, use <emphasis role="input">»CTRL+C«</emphasis></para>
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section id="passing-on-arguments-to-the-jvm">
      <title>Passing on arguments to the JVM</title>
      <para>
        The test executor also accepts arguments to pass on to the Java Virtual Machine. This means
        that you can, for example, increase the initial and maximum amount of system memory allocated
        to the JVM with the parameters <emphasis role="input">-Xms&lt;memory_size&gt;</emphasis> and
        <emphasis role="input">-Xmx&lt;memory_size&gt;</emphasis>, respectively. For example, the
        parameter <emphasis role="input">-Xmx128M</emphasis> would make a maximum of 128 MB of system
        memory available to the test executor. When entering the standard parameters for the test executor,
        you may add <emphasis role="input">-J&lt;JVM_parameter&gt;</emphasis> for each JVM parameter you
        wish to set. For example, <emphasis role="input">-J-Xmx128M</emphasis>. Multiple parameters,
        like standard parameters, are separated by spaces.
      </para>
      <para>
        Here is an example of defining mutliple JVM parameters:<?linebreak?>
        <emphasis role="input">-J-Xmx128M -JXms128M</emphasis>.
      </para>
    </section>
  </section>
  <section id="using-test-exec-with-embedded-db">
    <title>Using the test executor with the embedded database</title>
    <para>
      If you are using the default embedded database, you will need to
      enter the following information as parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          -dbscheme
        </term>
        <listitem>
          <para>
            Default Embedded (H2)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          -dbuser
        </term>
        <listitem>
          <para>
            sa
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          -dbpw
        </term>
        <listitem>
          <para>
            &lt;empty&gt; (<emphasis role="input">''''</emphasis>)
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      If you have changed the name of the default database scheme in
      the database preferences (<xref linkend="database-preferences"/>), you should alter
      the parameter for the <emphasis>-dbscheme</emphasis>
      accordingly.
    </para>
  </section>
  <section id="using-a-config-file">
    <title>Using a configuration file</title>
    <orderedlist>
      <listitem>
        <para>
          You can also enter test executor parameters in an XML
          configuration file. <para role="tip">The workspace parameter
          (<emphasis>-data</emphasis>) cannot currently be entered in
          the configuration file for the test executor, it must be
          entered directly into the command line interface.</para>
        </para>
      </listitem>
      <listitem>
        <para>
          This saves you typing in the same details each time you
          start a test.
        </para>
      </listitem>
      <listitem>
        <para>
          To enter the configuration file path, enter the following command:
          
          <para>
            <emphasis role="input">-c &lt;path to file&gt;</emphasis>
          </para>
          <para>
            For example: <emphasis>-c
            ”&lt;pathToQADocs&gt;/config1.xml”</emphasis>
          </para>
        </para>
      </listitem>
      <listitem>
        <para>
          You can also overwrite parameters contained in the
          configuration file by entering another parameter directly
          into the interface.
        </para>
      </listitem>
      <listitem>
        <para>
          For example, if your configuration file contains the Test
          Suite ”<emphasis>Suite1</emphasis>”, but you enter
          <emphasis role="input">-testsuite ''Suite2''</emphasis> in the command line
          interface, the Test Suite called
          ”<emphasis>Suite2</emphasis>” will be started, not
          ”<emphasis>Suite1</emphasis>”.
        </para>
      </listitem>
      <listitem>
        <para>
          To create an XML file:
        </para>
        <orderedlist>
          <listitem>
            <para>
              Open a text editor of your choice.
            </para>
          </listitem>
          <listitem>
            <para>
              Enter the desired parameters as shown in the examples in the installation:
              
              <para>
                <emphasis>InstallationDirectory/examples/scripts</emphasis>
              </para>
            </para>
          </listitem>
          <listitem>
            <para>
              Save the file as an XML file.
            </para>
          </listitem>
          <listitem>
            <para>
              This file will be used when you enter the ”<emphasis>-c
              &lt;path to file&gt;</emphasis>” parameter. <para role="tip">The
              no-run, quiet mode, no screenshot, no screenshots in
              reports, no relevance and <emphasis>-data</emphasis>
              (for the workspace) parameters can only be entered in
              the command line interface. They cannot be entered in
              the configuration file.</para><para role="tip">Java Virtual Machine
              parameters can only be entered in the command line
              interface. They cannot be entered in the configuration
              file.</para>
            </para>
          </listitem>
        </orderedlist>
      </listitem>
    </orderedlist>
  </section>
  <section id="working-with-no-run">
    <title>Working with the no-run option</title>
    <para>
      The no run option lets you perform steps that are required for
      test execution without actually executing the test. This is
      useful to find out whether there are any problems in the test or
      in the environment that would hinder the test starting.
    </para>
    <para>
      You can use the no run option with one of the following values.
      If no value is entered, then ”cc” is used (up to and including
      the completeness check step).
    </para>
    <variablelist>
      <varlistentry>
        <term>
          caa
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to connect to
            the AUT agent
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          cdb
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to connect to
            the database
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          lp
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to load the
            Project
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          cc
        </term>
        <listitem>
          <para>
            the test runs up to and including the completeness check
            step
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          sa
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to start the
            AUT
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          pte
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to prepare the
            test execution
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          ca
        </term>
        <listitem>
          <para>
            the test runs up to and including the connect to AUT step
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          rpv
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to resolve
            predefined variables
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          bt
        </term>
        <listitem>
          <para>
            the test runs up to and including the step to build the
            execution tree
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</section>