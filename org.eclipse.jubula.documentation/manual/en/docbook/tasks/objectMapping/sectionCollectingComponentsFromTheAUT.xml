<!-- 
  Copyright (c) 2014 BREDEX GmbH.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
-->

<section id="collecting-components-technical-names-from-the-aut" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                                               xmlns:xi="http://www.w3.org/2001/XInclude"
                                                                               xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Collecting components (technical names) from the AUT</title>
  <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
  <para>
    Once your test specification is ready, you can
    <emphasis>collect</emphasis> components (technical names) from
    the AUT to <emphasis>map</emphasis> (assign) to the component
    names you used in your tests.
  </para>
  <para>
    To collect components from the AUT, you must have:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        started and connected to the AUT Agent (<xref linkend="starting-and-connecting-aut-agent"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        created a Test Case containing Test Steps
        (<xref linkend="creating-test-cases"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        added Test Cases to a Test Suite (<xref linkend="working-with-suites"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        specified an AUT (<xref linkend="define-aut"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        configured an AUT (<xref linkend="configuringaut"/>) if you want to
        start the AUT from the ITE
      </para>
    </listitem>
    <listitem>
      <para>
        chosen an AUT for the Test Suite (<xref linkend="configuring-test-suites-in-the-properties-view"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        checked that your current working language is supported by
        the chosen AUT.
      </para>
    </listitem>
    <listitem>
      <para>
        started the AUT to be mapped (<xref linkend="starting-the-aut"/>)
      </para>
    </listitem>
    <listitem>
      <para>
        opened the object mapping editor (<xref linkend="opening-the-object-mapping-editor"/>)
      </para>
    </listitem>
  </itemizedlist>
  <orderedlist>
    <listitem>
      <para>
        Start the Object Mapping Mode by clicking the arrow next to
        the <emphasis>Start Object Mapping Mode</emphasis> <mediaobject role="icon" file="images/startOM.png"/>
        on the toolbar and selecting which AUT (based on the AUT ID) you
        want to map. 
      </para>
      <para>
        <para role="tip">If you have the same AUT running more than once, you
        will only be able to collect components from the AUT whose
        ID you chose. The object map for AUTs that are the same is,
        however, identical.</para>
      </para>
      <para>
        The status bar will show that the Object Mapping Mode is
        active.
      </para>
    </listitem>
    <listitem>
      <para>
        Bring the AUT into focus by clicking on its titlebar.
      </para>
    </listitem>
    <listitem>
      <para>
        Collect the component as described in the sections below for
        the specific toolkits.
      </para>
    </listitem>
    <listitem>
      <para>
        In the Object Mapping Editor, the technical name for this
        component will appear in the <emphasis>unassigned technical
        names</emphasis> area. <para role="tip">If you have already mapped
        this component, it will be highlighted in the Object Mapping
        Editor.</para>
      </para>
    </listitem>
    <listitem>
      <para>
        When you collect a technical name, it is displayed with a
        colored dot in the Object Mapping Editor. The color of the
        dot indicates the strength of the component recognition for
        this component, <emphasis>in the current state of the
        AUT</emphasis> (<xref linkend="understanding-the-colored-dots-when-collecting-component-names-in-the-object-mapping-editor"/>).
      </para>
    </listitem>
    <listitem>
      <para>
        Collect all the names you need from the AUT and then click
        the <emphasis>Stop Object Mapping Mode</emphasis> button
        <mediaobject role="icon" file="images/stopOM.png"/> on
        the toolbar.
      </para>
    </listitem>
    <listitem>
      <para>
        You can now map (assign) the component names you used in
        your Test Cases to the technical names you have collected
        from the AUT <xref linkend="mapping-assigning-collected-technical-names-to-component-names"/>.
      </para>
    </listitem>
  </orderedlist>
  <section id="for-java-and-win-.net-auts">
    <title>For Java and Win (.NET) AUTs:</title>
    <itemizedlist>
      <listitem>
        <para>
          In the AUT for which the Object Mapping Mode was started,
          move the cursor over components. They will be highlighted
          with a green border (see <xref linkend="greenborders"/>).
        </para>
      </listitem>
      <listitem>
        <para>
          To collect a technical name for a component, hover the
          cursor over the component whose name you want to collect.
        </para>
      </listitem>
      <listitem>
        <para>
          Press <emphasis role="input">»CTRL+SHIFT+Q«</emphasis>.
          <para role="tip">You can change the key combination for the object
          mapping in the object mapping preferences
          (<xref linkend="object-mapping-preferences"/>). This is a good idea if the
          current key combination has a specific meaning in your
          AUT. You can also set the object mapping combination to a
          mouse click if your AUT does not accept key combinations.</para>
        </para>
      </listitem>
      <listitem>
        <para>
          If no component is collected, then you may need to write
          an extension to recognize and test the component. More
          information on this is available in the Developer Manual.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="for-html-auts">
    <title>For HTML AUTs:</title>
    <itemizedlist>
      <listitem>
        <para>
          While the Object Mapping Mode is active, the AUT cannot be
          used.
        </para>
      </listitem>
      <listitem>
        <para>
          To collect a technical name for a component, click the
          component whose name you want to collect.
        </para>
      </listitem>
      <listitem>
        <para>
          If the AUT you are mapping has been specified as a
          multi-window AUT in the AUT configuration
          (<xref linkend="advanced-html-aut-config"/>), then you will see an extra
          button in the Object Mapping Editor. When multiple windows
          are open, then you can choose between the windows – the
          window you choose is the window in which the mapping will
          take place. You should open the new window before starting
          the Object Mapping Mode. You can switch back and forth
          between windows by selecting them in the Object Mapping
          Editor.
        </para>
      </listitem>
      <listitem>
        <para>
          You will also need to use the HTML actions to switch
          between windows in your test.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section id="object-mapping-ios">
    <title>For iOS AUTs:</title>
    <para>
      Object mapping for iOS AUTs is done by tapping the component
      or clicking it if you are working on a simulator.
    </para>
    <para>
      There are three types of tap you can use, with different
      effects. We recommend reading the information on addressing
      the correct component in your iOS tests in the section on
      Toolkits (<xref linkend="addressing-correct-component-ios"/>).
    </para>
    <variablelist>
      <varlistentry>
        <term>
          Single tap:
        </term>
        <listitem>
          <para>
            This collects the component directly underneath your
            finger or the mouse cursor.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Double tap:
        </term>
        <listitem>
          <para>
            This collects the component directly underneath your
            finger or the mouse cursor, plus its direct parent. For
            example, if you want to collect a OK button, but you
            click on the ”OK” label, then a double tap will collect
            both the label and the button. Double taps are
            recommended for collecting any components that have text
            on them – a single tap may only collect the label,
            whereas a double-tap will collect the label and the
            component it is in.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Long tap:
        </term>
        <listitem>
          <para>
            This collects the component directly underneath your
            finger or the mouse cursor, plus all of its parents.
            This is useful if you want to collect disabled
            components (which cannot be collected with a single
            tap), or if you want to address components that are
            ”hard to reach” with a single or double tap.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      <para role="tip">The AUT functionality is deactivated during object
      mapping – clicks on buttons won’t close popovers, for example.
      To move to another screen, you must stop the Object Mapping
      Mode, switch, and then restart the Object Mapping Mode to
      continue mapping.</para>
    </para>
  </section>
  <section id="understanding-the-colored-dots-when-collecting-component-names-in-the-object-mapping-editor">
    <title>Understanding the colored dots when collecting component names in the Object Mapping Editor</title>
    <anchor role="helpid" id="objectMapEditorContextId">Object Mapping</anchor>
    <para>
      When technical names are collected from the AUT, they appear
      in the Object Mapping Editor with a colored dot. The color of
      the dot corresponds to the strength of the component
      recognition for this component <emphasis>at the time of
      collecting</emphasis>.
    </para>
    <variablelist>
      <varlistentry>
        <term>
          A green dot
        </term>
        <listitem>
          <para>
            signifies that the component can be found as an exact
            match, and that only this component was above the
            threshold (<xref linkend="the-configuration-view-in-the-object-mapping-editor"/>) (i.e. only this
            component was considered as possible.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          A yellow dot
        </term>
        <listitem>
          <para>
            means that the component can be found as an exact match,
            but that other components were also above the threshold,
            i.e. this was not the only component considered
            possible.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          A red dot
        </term>
        <listitem>
          <para>
            means that the component can not currently be found if a
            test is executed. The recognition value for the
            component is below the current threshold.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      You can use this information to identify components that will
      not be recognized in the current state of the AUT before
      running the test.
    </para>
    <para>
      <para role="tip">The colored dot disappears after saving. It is not a
      measurement of the component state over time, but only at the
      moment when the component was collected. You can see how well
      each component was actually located during a test by looking
      in the test result reports. Each Test Step provides
      information on the match heuristic for each component.</para>
    </para>
  </section>
</section>