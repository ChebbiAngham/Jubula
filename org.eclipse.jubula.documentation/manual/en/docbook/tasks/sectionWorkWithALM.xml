<section id="working-with-external-task-repositories" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                                                    xmlns:xi="http://www.w3.org/2001/XInclude"
                                                                    xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Working with external task repositories (ALM
  Integration)</title>
  <para>
    The ITE is integrated with the Eclipse Mylyn Project to allow you
    to:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Connect your ITE (via the workspace) to external task
        repositories.
      </para>
    </listitem>
    <listitem>
      <para>
        View, work on and edit tasks directly in the ITE.
      </para>
    </listitem>
    <listitem>
      <para>
        Create tasks directly in the ITE.
      </para>
    </listitem>
    <listitem>
      <para>
        Integrate your tests with application lifecycle management
        (ALM) tools to provide information on the automated tests
        performed for specfic features or releases. We have tested the
        integration with Jira, Bugzilla and HP ALM.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    The Mylyn online help is included in the installation.
  </para>
  <para>
    Select:
    
    <para>
      <emphasis role="menuPath">Help</emphasis>--&gt;<emphasis role="menuPath">Help Contents</emphasis>
    </para>
    
    in the ITE to see the Mylyn help.
  </para>
  <section id="configuring-task-repositories">
    <title>Configuring task repositories in your workspace</title>
    <para>
      Each repository you want to work with in your ITE must be
      configured in the workspace you are using.
    </para>
    <orderedlist>
      <listitem>
        <para>
          Select:
          
          <para>
            <emphasis role="menuPath">Window</emphasis>--&gt;<emphasis role="menuPath">Show View</emphasis>--&gt;<emphasis role="menuPath">Other</emphasis>
          </para>
          
          from the menu.
        </para>
      </listitem>
      <listitem>
        <para>
          In the <emphasis>Mylyn</emphasis> section, select
          <emphasis>Task Repositories</emphasis> and click
          ”<emphasis>OK</emphasis>”. The <emphasis>Task
          Repositories</emphasis> View will appear. The Bugzilla
          Repositories for Jubula are pre-configured.
        </para>
      </listitem>
      <listitem>
        <para>
          In the <emphasis>Task Repositories</emphasis> View, right
          click and select <emphasis>Add Task Repository</emphasis>
          from the context menu.
        </para>
      </listitem>
      <listitem>
        <para>
          In the dialog that appears, you will see the pre-defined
          task repositories for the ITE. You can select one of these
          or choose to install a different connector. Depending on the
          connector you want to use, you may require additional
          software from Tasktop, or the connector may incur license
          fees. If you want to connect to a HP ALM repository, please
          follow the instructions below (<xref linkend="adding-hp-alm-repository"/>).
        </para>
      </listitem>
      <listitem>
        <para>
          Once you have selected your connector, click
          ”<emphasis>Next</emphasis>”.
        </para>
      </listitem>
      <listitem>
        <para>
          On the following page, you will need to configure the task
          repository. Please refer to the Mylyn documentation for
          information on repository configuration.
        </para>
      </listitem>
      <listitem>
        <para>
          Click ”<emphasis>Finish</emphasis>” once the repository is
          configured.
        </para>
      </listitem>
      <listitem>
        <para>
          To be able to see tasks in this repository, select:
          
          <para>
            <emphasis role="menuPath">Window</emphasis>--&gt;<emphasis role="menuPath">Show View</emphasis>--&gt;<emphasis role="menuPath">Other</emphasis>
          </para>
          
          from the menu.
        </para>
      </listitem>
      <listitem>
        <para>
          In the <emphasis>Mylyn</emphasis> section, select
          <emphasis>Task List</emphasis> and click
          ”<emphasis>OK</emphasis>”. The <emphasis>Task
          List</emphasis> View will appear.
        </para>
      </listitem>
    </orderedlist>
    <para>
      You will now be able to see items in this repository, open them
      in the ITE, add queries for your workspace and work on tasks
      from this repository. You will also be able to select this
      repository in the Project properties as the repository for your
      Project (<xref linkend="configuring-a-task-repository"/>).
    </para>
    <section id="adding-hp-alm-repository">
      <title>Adding a HP ALM repository to your workspace</title>
      <orderedlist>
        <listitem>
          <para>
            To add the connector for a HP ALM repository, you will
            have to install and license software from Tasktop.
          </para>
        </listitem>
        <listitem>
          <para>
            Once you have a Tasktop account and a license for HP ALM,
            you can install and use the HP ALM connector.
          </para>
        </listitem>
        <listitem>
          <para>
            On the www.tasktop.com website, select
            <emphasis>Downloads</emphasis> and locate the
            <emphasis>Tasktop Dev</emphasis> product.
          </para>
        </listitem>
        <listitem>
          <para>
            Select the option to download the plugin.
          </para>
        </listitem>
        <listitem>
          <para>
            Follow the instructions on the Tasktop website to install
            the the plugin into your ITE. You will require the Tasktop
            Dev Enterprise for the HP ALM connector.
          </para>
        </listitem>
        <listitem>
          <para>
            When prompted to restart the ITE automatically, say
            <emphasis>No</emphasis> and then restart the ITE manually
            via the menu.
          </para>
        </listitem>
        <listitem>
          <para>
            When the ITE is restarted, you will be prompted to enter
            your account details for Tasktop.
          </para>
        </listitem>
        <listitem>
          <para>
            Once you have entered your information, you will be able
            to configure the repository via the <emphasis>Task
            Repositories</emphasis> view.
          </para>
        </listitem>
      </orderedlist>
    </section>
  </section>
  <section id="working-on-tasks-in-the-ite-contexts">
    <title>Working on tasks in the ITE: contexts</title>
    <para>
      Once you have configured a task repository for your workspace
      (<xref linkend="configuring-task-repositories"/>), you can work on tasks from
      that repository.
    </para>
    <section id="opening-and-editing-tasks-in-the-ite">
      <title>Opening and editing tasks in the ITE</title>
      <itemizedlist>
        <listitem>
          <para>
            To be able to see tasks in a repository, select:
            
            <para>
              <emphasis role="menuPath">Window</emphasis>--&gt;<emphasis role="menuPath">Show View</emphasis>--&gt;<emphasis role="menuPath">Other</emphasis>
            </para>
            
            from the menu.
          </para>
        </listitem>
        <listitem>
          <para>
            In the <emphasis>Mylyn</emphasis> section, select
            <emphasis>Task List</emphasis> and click
            ”<emphasis>OK</emphasis>”. The <emphasis>Task
            List</emphasis> View will appear.
          </para>
        </listitem>
        <listitem>
          <para>
            Double-click on a task to open this task in the editor
            area.
          </para>
        </listitem>
        <listitem>
          <para>
            Once a task is open, you can work on it as you would in an
            external system – add comments, change status etc.
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="activate-task">
      <title>Working on tasks in the ITE</title>
      <para>
        Mylyn supports context- or task-based working. When you work
        on a task, you only see items relevant to that task, so that
        coming back to the task later involves less context-switching.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Mylyn supports context-based working. You can work on
            existing tasks in a configured repository, or you can
            create tasks to work on.
          </para>
        </listitem>
        <listitem>
          <para>
            To work on a task, you must <emphasis>activate</emphasis> it. To activate a task, select the task in the <emphasis>Task List</emphasis> and select:
            
            <para>
              <emphasis role="menuPath">Activate</emphasis>
            </para>
            
            from the context-sensitive menu.
          </para>
        </listitem>
        <listitem>
          <para>
            When you activate a task for the first time, the browsers
            and editors will seem very empty. This is because nothing
            is yet a part of the context for this task.
          </para>
        </listitem>
        <listitem>
          <para>
            You can navigate through the browsers by pressing
            <emphasis role="input">»Alt+Click«</emphasis> to expand each
            level, or you can press the <emphasis>Focus on
            task</emphasis> button in the browsers to show the whole
            tree (not focusing on the task), or just the items in the
            current context (focusing on the task).
          </para>
        </listitem>
        <listitem>
          <para>
            Items are automatically added to your context when you
            select them in a browser, when you open them in an editor,
            or when you perform other actions that cause them to be
            made relevant (e.g. Test Case creation, showing a Test
            Case specification etc.). Items that are used particularly
            frequently are marked as <emphasis>landmarks</emphasis>
            and shown in bold.
          </para>
        </listitem>
        <listitem>
          <para>
            You can manually alter which items are in your context
            using the context-sensitive menu for a specific item. You
            can manually make items landmarks, or remove them from the
            context.
          </para>
        </listitem>
        <listitem>
          <para>
            The context that is created for you will be re-created
            when you reactivate the task at a later point.
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section id="creating-tasks-in-external-repositories-from-test-result-reports">
    <title>Creating tasks in external repositories from test result reports</title>
    <anchor role="helpid" id="testResultViewContextId">Test Results View</anchor>
    <para>
      You can create a new task with pre-filled information directly
      from an open test result report in the Test Result View. This is
      useful if a test has failed and you want to create e.g. an issue
      in your bug-tracking system for the failure.
    </para>
    <orderedlist>
      <listitem>
        <para>
          In an open test result report, select the node that best describes the test failure (e.g. a Test Case or Test Step that has failed, or the whole Test Suite, then right-click and select:
          
          <para>
            <emphasis role="menuPath">Create a Mylyn Task</emphasis>
          </para>
          
          from the context-sensitive menu.
        </para>
      </listitem>
      <listitem>
        <para>
          In the dialog that appears, select a repository in which to
          create the task. A <emphasis>local</emphasis> repository is
          available by default, but you can also add connections to
          Bugzilla and Trac repositories by clicking ”<emphasis>Add
          Task Repository</emphasis>” in the New Task Dialog.
          Connectors to other repositories can also be added. See the
          Mylyn documentation for more details on adding repositories.
        </para>
      </listitem>
      <listitem>
        <para>
          Click ”<emphasis>Finish</emphasis>” once you have selected
          your repository.
        </para>
      </listitem>
      <listitem>
        <para>
          The editor for a new task will appear. It is pre-filled with
          information relevant to the node that you selected. Edit the
          task to make it descriptive enough for a bug report and save
          the editor.
        </para>
      </listitem>
      <listitem>
        <para>
          Once you have created a task, you can activate it to start
          saving your context for this task. See the later section
          (<xref linkend="activate-task"/>) for details.
        </para>
      </listitem>
    </orderedlist>
  </section>
  <section id="automatically-reporting-to-external-repositories-after-test-runs">
    <title>Automatically reporting to external repositories after test runs</title>
    <anchor role="helpid" id="guidancerPropertiesViewContextId">Properties View</anchor>
    <para>
      You can automatically update tasks in an external repository when a test has run. 
      You can report the test results by writing a comment on a task in the external repository 
      with a link to the test result in the dasboard. 
      You can also update fields / attributes on tasks based on information 
      you specify in your Project.
    </para>
    <section id="configuring-a-task-repository">
      <title>Configuring a task repository for your Project</title>
      <para>
        Once you have configured one or more repositories for your
        workspace (<xref linkend="configuring-task-repositories"/>), you can select
        one of these to be the test-relevant repository for your
        Project.
      </para>
      <para>
        This will let you:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Add a task ID from this repository to Test Cases and Test
            Suites in the Project to signify that this item is the
            test for this task (<xref linkend="adding-task-id-alm"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            Automatically report test results to the task defined when
            a test runs.
          </para>
        </listitem>
        <listitem>
          <para>
            View the test results for the relevant item in the
            dashboard as a link from the task repository.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">To configure a task repository for
        your Project:</emphasis>
      </para>
      <orderedlist>
        <listitem>
          <para>
            In the Project Properties, select <emphasis>Mylyn
            ALM</emphasis> from the tree on the left
            (<xref linkend="TasksALMProjectProperties"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            In the page that appears, you can select a repository from
            the combo-box. You can validate the repository settings
            using the button.
          </para>
        </listitem>
        <listitem>
          <para>
            Enter the URL of the Dashboard that is configured to use
            the correct database for your test results. This is the
            Dashboard that will be opened when you click on a test
            result link from the task repository. For more information
            on configuring and starting the Dashboard, see the
            documentation (<xref linkend="working-with-dashboard"/>).
          </para>
        </listitem>
      </orderedlist>
      <figure id="TasksALMProjectProperties">
        <title>ALM Settings</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="../images/almproperties.png"/>
          </imageobject>
          <textobject><phrase>ALM Settings</phrase></textobject>
        </mediaobject>
      </figure>
    </section>
    <section id="configuring-reporting-to-tasks-via-properties">
    <title>Configuring reporting to tasks</title>
    	<para>
    	When a test has run, you can update relevant tasks in your repository with information:
    	</para>
    	<itemizedlist>
    	<listitem>
    	<para>
    	A comment that contains the status of the test run, and a link to the results for that test.
    	</para>
    	</listitem>
    	<listitem>
    	<para>
    	You can update fields / atrributes for a task based on whether the test succeeded or failed.
    	</para>
    	</listitem>
    	<para role="tip">Tests that have a status other than <emphasis>passed</emphasis> (e.g. failed, 
    	stopped, still testing) are considered as failed</para>
    	</itemizedlist>
    	<para>
    	For each item (Test Case, Test Suite) in your test run that 
    	is linked to a task 
    	(<xref linkend="adding-task-id-alm"></xref>)
    	the rules you specify in the Project properties will be carried out to report test 
    	results to that task.
    	</para>

		<orderedlist>
			<listitem>
			<para>
			In the Project Properties, select <emphasis>Mylyn ALM</emphasis> from the tree on 
			the left.
			</para>
			</listitem>
			<listitem>
			<para>
			In the page that appears, you can configure how to report results. 
			You have the same options for what to do on success and on failure.
			</para>
			</listitem>
				<itemizedlist>
					<listitem>
					<para>
					You can activate the checkbox to add a comment to each linked task. 
					The comment contains information about the test run (date, status) 
					and also a link to the test results. 
					The test results can be seen in the specified 
					dashboard (<xref linkend="configuring-a-task-repository"/>).
					</para>
					</listitem>
					<listitem>
					<para>
					You can add rules in the table to update attributes for the task. Enter a descriptive name 
					(this is only used for display purposes in the Properties), the ID for the attribute you want to 
					update and the value that the attribute should be updated with. 
					As values for the update, you can enter:
					</para>
						<itemizedlist>
							<listitem>
							<para>
							plain text, e.g. "passed"
							</para>
							</listitem>
							<listitem>
							<para>
							a value from a column in the Test Result Summary View for this run.
							The value for a column is gained by entering the column name as a variable. 
							Some examples are:  
							</para>
							<para>
							$summary_autHostname, $summary_testRunState (gives e.g. "OK" or "FAILED"), $summary_testsuiteName, $summary_testJobName, 
							$summary_testsuiteEndTime,
							$summary_testsuiteDate (for full date format), $summary_statusString (gives e.g. "Successfully tested" or "Error in Children"),
							 $summary_testsuiteDuration, 
							$summary_testsuiteStartTime, $summary_date (for DD.MM.YYYY), $summary_autOS
							</para>
							<para>
							but you can use any column value by entering the column name as a variable preceded by "summary_". 
							</para>
							</listitem>
							<listitem>
							<para>
							a value from the executed node. The value is entered as a variable, e.g.
							</para>
							<para>
							$node_taskId, $node_timeStamp, $node_typeOfNode (e.g. Test Case), $node_name, 
							$node_parameterDescription, $node_date (for DD.MM.YYYY), $node_url (see below)
							</para>
							<para>
							Use the $node_url parameter to receive the URL that will 
							link to this node (Test Case or Test Suite) in the dashboard 
							(x<xref linkend="automatically-reporting-to-external-repositories-after-test-runs"/>). 
							</para>
							</listitem>
						</itemizedlist>
					</listitem>
					</itemizedlist>
			<listitem>
			<para>
			To see which attributes are available in your ALM repository, you can view the information for 
			individual tasks from the Task View (<xref linkend="viewing-task-attributes"/>)
			</para>
			</listitem>	
		</orderedlist>
			<section id="viewing-task-attributes">
			<title>Viewing task attributes</title>
			<para>
			In order to define rules for reporting to ALM systems, you will need to enter the ID 
			for any attributes you wish to update (<xref linkend="configuring-reporting-to-tasks-via-properties"/>).
			</para>
			<para>
			You can see which attributes a task has by using the <emphasis role="menuPath">Show attributes</emphasis>
			option from the Task View.
			</para>
			<orderedlist>
				<listitem>
				<para>Open the Task View if it is not already open by selecting:</para>
				<para>
				<emphasis role="menuPath">Window</emphasis> --&gt; <emphasis role="menuPath">Show View</emphasis> --&gt; 
				<emphasis role="menuPath">Task View</emphasis>.
				</para>
				</listitem>
				<listitem>
				<para>
				If you have not already configured your repository for your workspace, do so in the 
				Task Repositories View
				(<xref linkend="configuring-task-repositories"></xref>).
				</para>
				</listitem>
				<listitem>
				<para>
				Navigate to the task whose attributes you want to see and select:
				</para>
				<para>
				<emphasis role="menuPath">Show attributes</emphasis> from the context menu.
				</para>
				</listitem>
				<listitem>
				<para>
				The Task Attribute Viewer will appear. In this dialog, you can see the IDs 
				for the attributes for this task, which you can use to define rules for test 
				result reporting in the Project Properties 
				(<xref linkend="configuring-reporting-to-tasks-via-properties"/>).
				You can copy attributes using the keyboard.
				</para>
				</listitem>
			</orderedlist>
			
			</section>
    </section>
    <section id="adding-task-id-alm">
      <title>Adding task IDs to Test Suites and Test Cases</title>
      <para>
        You can add a task ID to Test Cases and Test Suites in your
        Project.
      </para>
      <para>
        The task ID should be a valid ID in the repository that you
        have specified as the repository for this Project
        (<xref linkend="configuring-a-task-repository"/>). Adding the task ID to an
        item in your Project means that this item is the relevant test
        for that task in your repository. You will be able to report
        test results for this item.
      </para>
      <para>
        To add a task ID to a Test Case or Test Suite:
      </para>
      <orderedlist>
        <listitem>
          <para>
            Open the item in the editor by double-clicking it.
          </para>
        </listitem>
        <listitem>
          <para>
            In the Properties View, in the cell for <emphasis>Task
            ID</emphasis>, enter the task ID from the external
            repository. You can only enter task IDs at the place of
            specification – you cannot overwrite them when you reuse
            the item.
          </para>
        </listitem>
        <listitem>
          <para>
            Save the editor.
          </para>
        </listitem>
        <listitem>
          <para>
            When you have added a task ID to a node, you can open the task for this node from the browser by selecting:
            
            <para>
              <emphasis role="menuPath">Open with</emphasis>--&gt;<emphasis role="menuPath">Mylyn Task Editor</emphasis>
            </para>
          </para>
        </listitem>
      </orderedlist>
      <para>
        <para role="tip">You should ensure that you add task IDs to the right
        node-level to provide you with the relevant amount of
        information for the tasks in your repository. This will
        usually be at the level of Use Cases within a Test Suite. </para>
      </para>
    </section>
    <section id="test-execution-with-reporting-to-external-repositories">
      <title>Test execution with reporting to external
      repositories</title>
      <para>
        If your Project is joined to an external repository
        (<xref linkend="configuring-a-task-repository"/>),
        and you have added task IDs to one or more items in your
        Project (<xref linkend="adding-task-id-alm"/>), then you will be able to
        report the test results to the repository after the test has
        run. The test run can be either via the ITE or via the command
        line <emphasis>testexec</emphasis>.
      </para>
      <para>
        <para role="tip">If you run a "relevant" test via the ITE which should report to
        ALM systems, the reporting is triggered automatically once the
        test has run. If the reporting for the test run encounters an
        error, then you will be able to manually trigger the reporting
        later <xref linkend="test-execution-with-reporting-to-external-repositories"/>. To report to ALM
        systems after running a test via testexec, you must also
        manually trigger the recording
        (<xref linkend="test-execution-with-reporting-to-external-repositories"/>).</para>
      </para>
      <para>
        When reporting is triggered, the following happens:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            A connection is made to ALM system configured in the
            Project properties.
          </para>
        </listitem>
        <listitem>
          <para>
            The test results are then analyzed to see if any comments
            need to be added in the external repository.
          </para>
        </listitem>
        <listitem>
          <para>
             If there is reporting to be done, the ITE
             reports to each necessary task as a batch job. The batch job contains 
             any field updates and any comments. 
             If multiple items in one test run reference the 
             same task ID, or if an item with a task ID is executed multiple times in the 
             same test run, then only one comment will be written. 
             However, field updates will occur for each item linked to the task ID. 
             In this case, you will see a warning in the console that you have multiple items
             in one test that are joined to one single task ID.
            <para role="tip">Tests that have
            a status other than <emphasis>passed</emphasis> (e.g.
            failed, stopped, still testing) are considered as
            <emphasis>failed</emphasis>.</para>
          </para>
        </listitem>
        <listitem>
          <para>
            You can see the status of the ALM reporting in the console
            view.
          </para>
        </listitem>
        <listitem>
          <para>
         	 Once reporting has been done, you can see the changes in the external repository. 
         	 If you added a comment, you can click on the link provided to open the test result
         	  report in the \dash{} that you specified for your Project. 
         	  The dashboard must be already running for this action to succeed. 
         	  The test results must also still be present in  
            the database (<xref linkend="re-opening-the-test-result-view-for-a-test-run"/>).
          </para>
        </listitem>
        <listitem>
          <para>
            The test result report is opened at the node which
            referenced the current task ID.
          </para>
        </listitem>
        <listitem>
          <para>
            You can see the status of the reporting in the Test Result
            Summary View (<xref linkend="test-execution-with-reporting-to-external-repositories"/>). <para role="tip">The
            integration for writing to external repositories can be
            used with Bugzilla 3.6+, JIRA 5.0+ and HP ALM 11+. Other
            repositories for which there are Mylyn connectors may also
            work, but these have not been tested.</para>
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">Reporting to ALM repositories after a
        test started via testexec</emphasis>
        For tests started via testexec,
        the reporting does not happen automatically. Instead, you must
        choose to report to ALM from the Test Result Summary View.
      </para>
      <orderedlist>
        <listitem>
          <para>
            In a Project that is configured to report to an ALM
            repository, when a test has run via testexec, you can open
            the Reporting Perspective and locate the test run in the
            Test Result Summary View.
          </para>
        </listitem>
        <listitem>
          <para>
            In the <emphasis>ALM Report Status</emphasis> column, you
            will see whether there are any reports pending. You can
            see various statuses in this column:
          </para>
          <variablelist>
            <varlistentry>
              <term>
                Not configured:
              </term>
              <listitem>
                <para>
                  if you have not configured ALM reporting for the
                  Project, or if the relevance of the Test Suite was set
                  to false when the test was started.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                Not yet reported:
              </term>
              <listitem>
                <para>
                  if reporting was configured for the Project, and
                  there is information available to be reported that
                  has not yet been reported, e.g. from a test run via
                  testexec. You will also see this status if you have
                  run a test via the ITE that could not report to the
                  ALM system due to e.g. a connection problem. This
                  allows you to report test results later, once the
                  problem has been resolved.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                Reported:
              </term>
              <listitem>
                <para>
                  this status will be shown if you have run a test
                  with reporting configured via the ITE, which reports
                  automatically. It will also be shown if you have
                  chosen to report to the ALM system after running a
                  test via testexec. This status will also be shown
                  even if the test run was not linked to any tasks,
                  but reporting is configured for the Project. It can
                  be understood as <emphasis>any reporting that was
                  necessary has been carried out</emphasis>.
                  If an error occurs while reporting to one of the tasks, 
                  the status will still show <emphasis>reported</emphasis> 
                  even though not all tasks were correctly updated
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                Report discarded:
              </term>
              <listitem>
                <para>
                  if reporting information was available, but the
                  information was discarded and therefore not
                  reported. You can do this by selecting the option to
                  discard a pending report from the context menu. This
                  status will also be shown for any test runs in a
                  Project that you import that had the status
                  <emphasis>Not yet reported</emphasis> when the
                  Project was exported.
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                Marked as non-relevant:
              </term>
              <listitem>
                <para>
                  you will see this status for any test runs that were
                  marked as relevant when the test was started and
                  which have information to report (status:
                  <emphasis>Not yet reported</emphasis>),but which you
                  then mark as non-relevant by toggling the relevance
                  in the Test Result Summary View. This status means
                  that you could report or discard the information,
                  but only if you re-toggle the test run to be
                  relevant.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
        <listitem>
          <para>
            Select any test runs whose results you want to report to
            ALM, and click on the ”<emphasis>Report to ALM</emphasis>”
            button on the toolbar. You can also select this option
            from the context-sensitive menu. If you select multiple
            test runs, the reporting will take place sequentially for
            each test run.
          </para>
        </listitem>
        <listitem>
          <para>
            When you select this option, the reporting will be
            triggered as described above. If the reporting is
            successful, the status in the <emphasis>ALM Report
            Status</emphasis> column changes from <emphasis>Not yet
            reported</emphasis> to <emphasis>Reported</emphasis>. If
            an error occurs, then the status remains as <emphasis>Not
            yet reported</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>
            If you do not want to report the test results to an ALM
            tool, you can discard the reporting information by
            selecting the option to discard a pending report from the
            context menu. This changes the status in the <emphasis>ALM
            Report Status</emphasis> column from <emphasis>Not yet
            reported</emphasis> to <emphasis>Report
            discarded</emphasis>.
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section id="specific-information-for-hp-alm-users">
      <title>Specific information for HP ALM users</title>
      <itemizedlist>
        <listitem>
          <para>
            To use the HP ALM integration, you must use a separate
            connector for HP ALM which may incur license costs. Visit
            the Tasktop website for more details
            <link xl:href="http://www.tasktop.com">http://www.tasktop.com</link>.
          </para>
        </listitem>
        <listitem>
          <para>
            If you have changed the attribute IDs in your HP ALM installation for defects and / or requirements from their relative defaults (<emphasis>BG_DEV_COMMENTS</emphasis> and <emphasis>REQ_DEV_COMMENTS</emphasis>), or if you have changed the ID for the connector, then you must modify these properties in the <emphasis role="input">almAccess.properties</emphasis> file contained in the jar:
            
            <para>
              <emphasis>org.eclipse.jubula.client.alm.mylyn.core</emphasis>
            </para>
          </para>
        </listitem>
        <listitem>
          <para>
            Since tasks in HP ALM only have one comment field, the
            result information is appended to the comment field
            instead of being added as a new comment each time.
          </para>
        </listitem>
        <listitem>
          <para>
            To write to requirements in a default HP ALM installation,
            you must use the prefix <emphasis>REQ</emphasis>, e.g.
            REQ100. To write to defects in a default HP ALM
            installation, you must use the prefix
            <emphasis>DEF</emphasis>, e.g. DEF42.
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
</section>