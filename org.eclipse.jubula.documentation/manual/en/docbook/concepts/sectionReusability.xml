<section id="reusability" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                        xmlns:xi="http://www.w3.org/2001/XInclude"
                                        xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Reusability</title>
  <para>
    Test Cases are the reusable units. Test Cases can be referenced in
    other Test Cases to create modularly built tests.
  </para>
  <para>
    Being able to reuse Test Cases means that you should put some
    thought into how to design them so that they are as specific as
    they need to be while also being generic enough to reuse in
    different situations.
  </para>
  <para>
    You can improve the flexibility of a Test Case by:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Using references (<xref linkend="using-references-for-data-in-test-cases"/>) instead of
        concrete data if the data can change. References allow you to
        feed a Test Case with different data each time you reuse it.
      </para>
    </listitem>
    <listitem>
      <para>
        Using the abstract components (e.g. component with text,
        component with text input, graphics component)
        (<xref linkend="ConceptsAbstractComps"/>) to specify your tests wherever
        possible.
      </para>
    </listitem>
    <listitem>
      <para>
        Allowing the component it tests to be defined when you reuse
        it (<xref linkend="entering-and-reassigning-component-names-in-the-component-names-view"/>).
      </para>
    </listitem>
  </itemizedlist>
  <section id="ConceptsAbstractComps">
    <title>Abstract, concrete and toolkit specific components</title>
    <para>
      There are three levels of components:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          Abstract components
        </term>
        <listitem>
          <para>
            are general, high-level components from which other
            components are derived. They are described in terms of
            what features a component has, e.g. graphics component,
            component with text. They group actions together which can
            all be executed on components of this type.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Concrete components
        </term>
        <listitem>
          <para>
            are components which are available to all graphical
            toolkits, but which are restricted to a certain component
            type, e.g. combo box, list.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Toolkit specific components
        </term>
        <listitem>
          <para>
            are the most specific components. They are only available
            for certain toolkits. For example, a HTML link is a
            component which is only available in Web applications.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      We recommend that you specify your tests as abstractly as
      possible, and as concretely as necessary. If you want to create
      a Test Case to click a button, it is better to use the abstract
      component <emphasis>graphics component</emphasis>. The
      <emphasis>graphics component</emphasis> also contains the
      <emphasis>click</emphasis> action, and has the advantage that
      the Test Case can then be used on other components than buttons.
      If you want to select a cell from a table, however, you will
      have to use the concrete component <emphasis>table</emphasis>,
      because this is the highest level which offers this action.
    </para>
    <para>
      The more abstract your specification, the more flexible your
      Test Cases are.
    </para>
  </section>
</section>