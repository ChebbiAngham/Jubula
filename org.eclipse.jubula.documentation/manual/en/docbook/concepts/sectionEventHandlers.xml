<section id="event-handlers" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                           xmlns:xi="http://www.w3.org/2001/XInclude"
                                           xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Event Handlers</title>
  <anchor role="helpid" id="eventHandlerAddContextId">Event Handlers</anchor>
  <anchor role="helpid" id="guidancerSpecTestCaseEditorContextId">Test Case Editor</anchor>
  <para>
    Event Handlers are a way of reacting to errors during test
    execution and to continue the test in a way you define.
  </para>
  <para>
    An Event Handler <mediaobject role="icon" file="../images/EventHandler.png"/>
    is a Test Case used with a special function. It is only
    executed when a certain type of error occurs. There are four
    different types of error, and each Test Case can have an Event
    Handler for each error type. You can specify different reactions
    to each different error type, so that serious errors can stop the
    test, but unimportant errors will not affect the execution.
  </para>
  <para>
    Because Event Handlers are normal Test Cases, they can also
    contain Event Handlers, can do any of the things that a normal
    Test Case can do. The only restriction is that you cannot add a
    Test Case to itself as an Event Handler.
  </para>
  <section id="how-event-handlers-work">
    <title>How Event Handlers work</title>
    <para>
      When an error occurs in a Test Step, its parent Test Case is
      searched for an Event Handler for this type of error. If no
      Event Handler is found, the parent Test Case of this Test Case
      is searched and so on. Once a corresponding Event Handler is
      found, it is activated.
    </para>
    <para>
      If no Event Handler is found in the highest Test Case in this
      part of the tree, a default Event Handler (set in the Test Suite
      properties) is activated.
    </para>
    <para>
      Each Event Handler requires an ”<emphasis>Event Type</emphasis>”
      and a ”<emphasis>Reentry Type</emphasis>”. For information on
      these terms, see the section in the Tasks chapter
      (<xref linkend="dealing-with-errors-in-tests"/>).
    </para>
  </section>
  <section id="default-event-handlers">
    <title>Default Event Handlers</title>
    <para>
      Default Event Handlers are a part of the Test Suite and can be
      considered as being present at the Test Suite level. They are
      activated when no Event Handler has been found for the event
      type in the part of the tree where the error occurred. The
      default reentry type for each event type can be specified in the
      Properties View for the Test Suite Editor.
    </para>
    <para>
      The reentry types for the default Event Handlers are the same
      throughout the tree. Everywhere a certain type of error occurs,
      the same action will be taken, unless the part of the tree where
      the error occurred has its own Event Handler for that event
      type.
    </para>
  </section>
  <section id="customized-event-handlers">
    <title>Customized Event Handlers</title>
    <para>
      Customized Event Handlers are essentially Test Cases, and can be
      empty or contain other Test Steps/Test Cases. They can be used
      to specify particular behavior in case of an error in one part
      of the test tree, or they can be placed so as to affect how the
      test continues. If an Event Handler contains Test Steps/Test
      Cases, the specified reentry will happen when the Event Handler
      has been executed.
    </para>
    <para>
      Customized Event Handlers are valid for all Test Cases under the
      Test Case where the Event Handler is nested, unless one of these
      child Test Cases has an Event Handler of its own for this error
      type.
    </para>
  </section>
</section>