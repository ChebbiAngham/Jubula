<!-- 
  Copyright (c) 2014 BREDEX GmbH.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
-->

<section id="recorded-tests" version="5.0" xmlns="http://docbook.org/ns/docbook"
                                           xmlns:xi="http://www.w3.org/2001/XInclude"
                                           xmlns:xl="http://www.w3.org/1999/xlink" >
  <title>Recorded Tests</title>
  <para>
    Possibly the most popular approach to automated functional
    testing is macro recording, that is, recording a user’s actions
    for later playback. The appeal of this approach is the
    apparently quick success that can be seen: a test script can be
    quickly recorded and played back, giving the impression that
    automated testing is nothing more than recording a manual test.
  </para>
  <para>
    However, this approach fails to meet the needs of large or
    long-term software projects for the following reasons:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Test specification begins very late in the development
        cycle, as recording can only begin once the software is
        available.
      </para>
    </listitem>
    <listitem>
      <para>
        Since only the user action is recorded, checkpoints for
        verification of test results have to be inserted manually.
      </para>
    </listitem>
    <listitem>
      <para>
        Recorded tests can only test parts of the application which
        already work.
      </para>
    </listitem>
    <listitem>
      <para>
        There is also the danger that the implementation of the
        application will be tested, instead of the requirements.
      </para>
    </listitem>
    <listitem>
      <para>
        Recorded scripts are often very large and not particularly
        well-structured. Making changes at a later point is
        therefore difficult and requires programming skills, which
        further increases costs.
      </para>
    </listitem>
    <listitem>
      <para>
        Code generated by recording generally doesn’t conform to
        common software quality attributes such as reliability,
        stability, portability, maintainability, and usability.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    In essence, a recorded script is not an automated test. It must
    be refactored to remove errors and redundancies, to make its
    component parts modular and reusable and to insert the
    intelligence of the manual tester to make the test robust. Once
    all this has been done, there is probably very little of the
    original recording left, and a great deal of development work
    has been done to refactor the script.
  </para>
</section>